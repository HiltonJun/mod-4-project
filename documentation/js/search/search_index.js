var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.129,1,2.513]],["body/controllers/AppController.html",[0,1.771,1,3.941,2,1.39,3,0.219,4,0.191,5,0.191,6,3.832,7,0.576,8,1.682,9,5.654,10,1.543,11,0.02,12,2.633,13,3.941,14,5.697,15,3.62,16,5.697,17,0.693,18,4.473,19,1.255,20,1.048,21,0.347,22,0.778,23,2.925,24,2.296,25,1.255,26,3.69,27,3.832,28,4.473,29,0.219,30,0.192,31,1.543,32,1.464,33,2.296,34,1.321,35,4.473,36,0.015,37,0.015]],["title/modules/AppModule.html",[38,1.073,39,2.513]],["body/modules/AppModule.html",[1,3.744,2,1.457,3,0.164,4,0.143,5,0.143,11,0.02,21,0.387,22,0.581,26,3.77,27,2.862,29,0.164,30,0.143,36,0.012,37,0.012,38,1.384,39,5.113,40,1.354,41,1.899,42,2.862,43,2.862,44,2.862,45,4.07,46,4.07,47,4.07,48,4.07,49,4.07,50,4.07,51,4.07,52,2.329,53,2.128,54,1.517,55,1.517,56,3.341,57,2.26,58,2.406,59,3.341,60,3.341,61,3.341,62,3.341,63,3.341,64,3.341,65,3.341,66,3.341,67,3.341]],["title/injectables/AppService.html",[26,2.139,68,0.919]],["body/injectables/AppService.html",[3,0.24,4,0.21,5,0.21,7,0.631,8,1.781,9,5.842,11,0.02,17,0.76,19,1.375,20,1.11,21,0.272,22,0.853,26,3.551,29,0.24,30,0.21,34,1.447,36,0.016,37,0.016,68,1.527,69,2.101,70,4.199,71,4.901,72,4.199,73,4.901,74,4.901,75,4.199,76,4.901,77,4.901,78,4.199,79,4.901]],["title/controllers/AuthController.html",[0,1.129,80,2.513]],["body/controllers/AuthController.html",[0,1.041,2,1.041,3,0.164,4,0.143,5,0.143,7,0.431,8,1.386,10,1.619,11,0.02,17,0.728,19,1.317,21,0.372,22,0.583,23,2.783,24,1.72,25,0.94,29,0.164,30,0.144,31,1.155,32,1.097,33,2.41,34,1.386,36,0.012,37,0.012,80,3.248,81,2.87,82,1.838,83,3.35,84,4.064,85,4.695,86,2.87,87,4.074,88,3.35,89,4.695,90,4.695,91,2.764,92,3.579,93,2.984,94,4.695,95,3.35,96,1.459,97,1.251,98,0.728,99,1.128,100,2.41,101,3.35,102,2.525,103,3.35,104,4.695,105,2.264,106,2.575,107,3.579,108,4.695,109,3.35,110,1.972,111,1.972,112,1.972,113,2.764,114,1.838,115,1.838,116,1.097,117,2.575,118,2.554,119,3.191,120,2.87,121,2.129,122,2.87,123,2.87,124,2.87,125,2.129,126,3.35,127,3.35,128,3.35,129,3.35,130,3.35,131,3.35,132,1.838,133,3.35]],["title/modules/AuthModule.html",[38,1.073,45,2.309]],["body/modules/AuthModule.html",[2,1.627,3,0.193,4,0.168,5,0.168,11,0.02,21,0.38,22,0.684,29,0.193,30,0.169,36,0.014,37,0.014,38,1.546,40,1.592,41,2.122,45,4.533,53,2.378,54,1.784,55,1.784,57,2.525,58,2.688,80,4.073,116,1.286,119,3.959,120,3.366,134,3.366,135,3.366,136,3.366,137,2.883,138,4.275,139,3.929,140,3.929,141,2.155,142,3.929,143,2.995,144,2.155,145,3.929,146,2.155,147,1.784,148,3.929,149,3.929,150,3.366,151,3.929,152,3.929,153,3.929]],["title/injectables/AuthService.html",[68,0.919,119,2.139]],["body/injectables/AuthService.html",[3,0.168,4,0.147,5,0.147,7,0.442,8,1.41,11,0.02,17,0.74,19,0.963,21,0.358,22,0.598,29,0.168,30,0.147,32,1.564,34,1.014,36,0.013,37,0.013,52,2.159,68,1.209,69,1.472,84,3.305,86,4.093,87,4.106,92,2.618,96,1.485,97,1.663,98,0.74,99,1.148,100,2.453,102,2.107,119,2.812,121,2.183,122,2.942,123,2.942,124,2.942,143,2.618,154,2.942,155,2.649,156,2.453,157,1.763,158,6.628,159,3.435,160,2.453,161,3.435,162,2.942,163,3.642,164,1.763,165,4.093,166,2.649,167,2.183,168,2.304,169,2.618,170,2.812,171,2.62,172,4.777,173,4.777,174,3.642,175,4.777,176,4.777,177,3.435,178,3.642,179,1.318,180,3.435]],["title/classes/CreateFavoriteDto.html",[30,0.156,181,2.139]],["body/classes/CreateFavoriteDto.html",[3,0.134,4,0.117,5,0.117,7,0.352,10,1.97,11,0.02,15,2.579,17,0.885,20,1.171,21,0.268,25,0.768,29,0.134,30,0.174,36,0.011,37,0.011,93,2.579,98,0.885,105,2.579,181,2.389,182,0.808,183,5.126,184,2.087,185,1.4,186,3.133,187,2.073,188,2.653,189,2.192,190,2.933,191,2.087,192,3.477,193,4.573,194,3.626,195,3.477,196,2.738,197,3.701,198,3.701,199,2.808,200,1.262,201,4.059,202,3.701,203,3.701,204,3.701,205,3.701,206,3.701,207,2.738,208,2.808,209,2.346,210,3.477,211,3.477,212,3.477,213,3.477,214,4.583,215,3.477,216,2.738,217,1.612,218,3.477,219,3.477,220,3.477,221,2.738,222,2.808,223,2.084,224,1.843,225,2.808,226,2.808,227,2.808,228,4.059,229,2.808,230,2.808,231,2.808,232,2.808,233,2.808,234,2.738,235,3.282,236,2.389,237,3.477,238,2.389,239,2.808,240,1.894,241,2.346,242,1.502,243,2.738,244,2.738,245,2.755,246,2.346,247,1.843]],["title/classes/CreateGameDto.html",[30,0.156,248,2.139]],["body/classes/CreateGameDto.html",[3,0.09,4,0.078,5,0.078,7,0.235,10,2.122,11,0.02,15,3.217,17,0.954,20,1.255,21,0.164,25,0.512,29,0.09,30,0.127,36,0.008,37,0.008,93,3.217,98,0.954,105,2.441,182,0.539,185,1.022,186,2.593,188,2.05,189,2.202,190,2.427,191,2.849,192,2.538,193,4.719,194,3.783,195,2.538,197,2.975,198,2.975,199,2.049,202,2.975,203,2.975,204,2.975,205,2.975,206,2.975,208,2.049,209,1.564,210,2.538,211,2.538,212,2.538,213,2.538,214,3.684,215,2.538,217,1.075,218,2.538,219,2.538,220,2.538,222,2.975,223,2.208,224,1.953,225,2.975,226,2.975,227,2.049,229,2.975,230,2.975,231,2.975,232,2.975,233,2.975,235,3.432,236,1.744,237,2.538,238,3.139,239,2.975,240,1.263,241,1.564,242,1.002,245,2.967,246,1.564,247,1.345,248,1.744,249,1.564,250,2.849,251,2.849,252,3.604,253,3.004,254,2.849,255,3.604,256,2.849,257,3.604,258,1.826,259,4.727,260,2.962,261,2.962,262,2.962,263,2.962,264,2.962,265,1.826,266,4.3,267,2.962,268,2.962,269,2.962,270,2.962,271,1.826,272,4.3,273,2.962,274,1.826,275,1.826,276,1.826,277,1.744,278,2.962,279,2.962,280,1.826,281,1.826,282,2.962,283,1.826,284,2.538,285,2.962,286,2.962,287,2.962,288,2.962,289,2.962,290,2.962,291,1.826,292,2.962,293,2.962,294,2.962,295,1.826,296,2.962,297,1.826,298,1.564]],["title/classes/CreateGeneroDto.html",[30,0.156,299,2.139]],["body/classes/CreateGeneroDto.html",[3,0.183,4,0.159,5,0.159,7,0.48,10,1.742,11,0.02,17,0.783,20,1.131,21,0.28,25,1.045,29,0.183,30,0.217,36,0.013,37,0.013,98,0.783,182,1.1,185,1.742,189,2.464,194,3.371,197,3.495,198,3.495,199,2.578,202,3.495,203,3.495,204,3.495,205,3.495,206,3.495,217,2.194,222,3.495,223,2.594,224,2.294,225,3.495,226,3.495,227,3.495,229,3.495,230,3.495,231,3.495,232,3.495,233,3.495,235,3.144,236,2.974,238,2.974,240,2.578,242,2.044,245,2.436,247,1.692,299,2.974,300,3.192,301,3.374,302,3.495,303,4.328,304,5.052,305,5.265,306,3.726,307,4.328,308,5.052,309,5.052,310,3.726]],["title/classes/CreatePerfilDto.html",[30,0.156,311,2.139]],["body/classes/CreatePerfilDto.html",[3,0.144,4,0.125,5,0.125,7,0.377,10,1.905,11,0.019,15,2.709,17,0.856,20,1.193,21,0.236,25,0.821,29,0.144,30,0.183,36,0.011,37,0.011,93,2.709,98,0.856,105,2.664,182,0.864,185,1.47,189,1.635,191,2.231,194,3.556,197,3.821,198,3.821,199,2.949,202,3.821,203,3.821,204,3.821,205,3.821,206,3.821,217,1.723,222,3.821,223,2.836,224,2.508,225,3.821,226,3.821,227,2.949,229,3.821,230,3.821,231,3.821,232,3.821,233,3.821,235,3.22,236,2.51,238,2.51,239,2.949,240,2.025,242,1.606,245,2.664,247,1.936,301,2.96,302,2.949,311,2.51,312,5.03,313,2.231,314,4.308,315,4.308,316,3.833,317,2.949,318,2.927,319,4.263,320,3.146,321,2.927,322,4.263,323,4.263,324,4.263,325,2.927,326,4.263,327,2.927]],["title/classes/CreateUserDto.html",[30,0.156,328,2.139]],["body/classes/CreateUserDto.html",[3,0.149,4,0.13,5,0.13,7,0.391,10,2.054,11,0.02,15,2.782,17,0.923,20,1.246,21,0.243,25,0.851,29,0.149,30,0.188,36,0.012,37,0.012,84,3.028,93,2.782,97,1.368,98,0.923,105,2.111,106,3.404,167,3.262,174,4.991,182,0.896,185,1.51,189,1.679,194,3.714,217,3.022,235,3.404,236,3.307,238,3.506,239,2.1,242,1.665,245,2.872,284,3.75,298,2.601,328,2.577,329,5.316,330,2.314,331,5.133,332,4.541,333,4.541,334,2.601,335,4.377,336,4.377,337,4.377,338,4.377,339,4.813,340,3.036,341,4.377,342,4.377,343,4.377,344,3.036,345,4.377,346,3.036,347,3.75,348,3.036,349,3.036,350,4.377,351,4.377,352,4.377,353,4.377,354,3.036,355,3.036,356,3.036,357,3.036,358,3.036,359,3.036,360,3.036,361,3.036]],["title/classes/Favorite.html",[30,0.156,362,2.139]],["body/classes/Favorite.html",[3,0.209,4,0.182,5,0.182,7,0.548,11,0.019,17,1.066,20,1.306,21,0.236,29,0.209,30,0.183,36,0.015,37,0.015,98,1.066,99,1.653,182,1.257,185,1.903,186,3.358,187,2.947,188,3.358,189,2.349,190,3.143,200,1.903,208,3.817,362,3.248,363,3.646,364,4.256,365,4.256,366,4.256,367,4.256,368,4.256,369,4.256,370,1.824]],["title/controllers/FavoriteController.html",[0,1.129,371,2.513]],["body/controllers/FavoriteController.html",[0,1.027,2,1.027,3,0.162,4,0.141,5,0.141,7,0.425,8,1.373,10,1.856,11,0.02,12,1.946,17,0.834,19,1.509,20,0.99,21,0.341,22,0.575,23,2.998,24,1.697,25,0.927,29,0.162,30,0.142,31,1.14,32,1.082,33,2.762,34,1.589,36,0.012,37,0.012,82,1.813,91,3.437,96,1.446,97,1.239,98,0.721,99,1.118,110,1.946,111,1.946,112,1.946,113,2.738,114,1.813,115,1.813,116,1.082,117,2.551,132,1.813,179,2.064,181,3.437,193,3.217,200,1.815,224,2.112,317,3.217,362,1.946,371,3.217,372,2.832,373,1.784,374,2.366,375,1.946,376,2.101,377,4.651,378,3.305,379,2.388,380,1.501,381,2.101,382,2.956,383,4.651,384,2.738,385,3.305,386,2.738,387,2.956,388,3.305,389,2.101,390,1.946,391,3.167,392,2.832,393,1.946,394,2.52,395,3.305,396,3.305,397,2.287,398,3.305,399,3.305,400,2.101,401,2.101,402,2.101,403,3.305]],["title/modules/FavoriteModule.html",[38,1.073,46,2.309]],["body/modules/FavoriteModule.html",[2,1.735,3,0.212,4,0.185,5,0.185,11,0.02,21,0.374,22,0.754,29,0.212,30,0.186,36,0.015,37,0.015,38,1.648,40,1.755,41,2.261,46,4.526,53,2.534,54,1.967,55,1.967,57,2.691,58,2.865,116,1.418,137,2.961,141,2.376,144,2.376,146,2.376,147,1.967,371,4.271,391,4.067,392,3.71,404,3.71,405,4.331,406,3.71,407,4.331,408,4.331]],["title/injectables/FavoriteService.html",[68,0.919,391,2.139]],["body/injectables/FavoriteService.html",[3,0.134,4,0.117,5,0.117,7,0.352,8,1.198,11,0.02,17,0.885,19,1.5,20,1.101,21,0.332,22,0.476,29,0.134,30,0.118,31,0.944,32,0.896,34,1.428,36,0.011,37,0.011,52,1.945,68,1.027,69,1.174,96,1.663,97,1.425,98,0.829,99,1.286,100,2.746,105,1.32,155,3.273,156,1.406,157,1.406,160,2.483,164,1.406,166,1.957,168,2.755,170,1.612,171,1.502,179,1.557,181,3.363,186,2.226,187,1.74,188,2.226,189,1.557,190,2.084,200,2.019,223,1.406,247,2.594,277,2.389,362,1.612,370,1.174,373,1.557,374,2.168,380,1.843,391,2.389,393,1.612,394,2.087,409,2.346,410,2.808,411,2.738,412,4.059,413,2.738,414,1.612,415,2.738,416,2.738,417,2.808,418,2.738,419,1.74,420,2.738,421,1.502,422,1.74,423,2.738,424,2.738,425,2.738,426,2.738,427,3.094,428,2.738,429,2.738,430,1.894,431,2.738,432,2.847,433,1.74,434,2.346,435,3.346,436,2.738,437,1.894,438,1.74,439,1.894,440,1.894,441,2.738]],["title/classes/Game.html",[30,0.156,187,1.557]],["body/classes/Game.html",[3,0.169,4,0.147,5,0.147,7,0.443,11,0.02,17,1.107,20,1.357,21,0.265,29,0.169,30,0.148,36,0.013,37,0.013,98,1.107,99,1.554,182,1.017,185,1.651,186,3.017,187,2.052,188,3.017,189,2.11,190,2.824,200,1.71,208,3.311,250,4.194,251,4.194,252,4.194,253,3.496,254,4.194,255,4.194,256,4.194,257,4.194,320,2.824,442,2.951,443,3.444,444,3.444,445,3.444,446,3.444,447,2.824,448,3.444,449,3.444,450,3.444,451,3.444,452,3.444,453,3.444,454,3.444,455,3.444,456,3.444,457,3.444,458,3.444]],["title/controllers/GameController.html",[0,1.129,459,2.513]],["body/controllers/GameController.html",[0,0.824,2,0.824,3,0.13,4,0.113,5,0.113,7,0.341,8,1.169,10,1.943,11,0.02,12,1.56,13,2.74,17,0.873,19,1.58,20,1.185,21,0.339,22,0.461,23,3.035,24,1.36,25,0.743,29,0.13,30,0.114,31,0.914,32,0.867,33,2.892,34,1.663,36,0.011,37,0.011,82,1.453,91,3.708,96,1.636,97,1.402,98,0.816,99,1.265,100,2.033,110,2.332,111,1.56,112,1.56,113,2.332,114,1.453,115,1.453,116,0.867,117,2.173,132,1.453,179,1.82,187,1.698,193,4.358,200,2.038,224,1.799,248,3.098,302,2.74,370,1.136,373,1.519,374,2.133,375,1.56,376,1.684,379,3.035,380,1.203,381,1.684,382,2.517,384,3.098,386,2.332,387,2.517,389,1.684,390,1.56,397,1.833,400,1.684,401,1.684,402,1.684,459,2.74,460,2.27,461,2.517,462,2.033,463,2.74,464,2.649,465,2.649,466,2.649,467,1.684,468,2.02,469,2.649,470,1.36,471,3.345,472,1.833,473,2.74,474,2.649,475,2.27,476,2.27,477,2.792,478,2.27,479,2.649,480,2.649,481,2.649,482,2.02,483,2.02,484,2.649,485,2.649,486,1.833,487,1.833,488,2.649,489,2.649]],["title/modules/GameModule.html",[38,1.073,47,2.309]],["body/modules/GameModule.html",[2,1.735,3,0.212,4,0.185,5,0.185,11,0.02,21,0.374,22,0.754,29,0.212,30,0.186,36,0.015,37,0.015,38,1.648,40,1.755,41,2.261,47,4.526,53,2.534,54,1.967,55,1.967,57,2.691,58,2.865,116,1.418,137,2.961,141,2.376,144,2.376,146,2.376,147,1.967,459,4.271,477,4.067,478,3.71,490,3.71,491,4.331,492,3.71,493,4.331,494,4.331]],["title/injectables/GameService.html",[68,0.919,477,2.139]],["body/injectables/GameService.html",[3,0.097,4,0.085,5,0.085,7,0.256,8,0.936,11,0.02,17,0.855,19,1.475,20,1.159,21,0.306,22,0.346,29,0.097,30,0.085,31,0.685,32,0.65,34,1.456,36,0.008,37,0.008,52,1.641,68,0.802,69,0.851,96,1.634,97,1.401,98,0.815,99,1.264,100,2.317,105,0.957,155,3.249,156,1.019,157,1.019,160,2.03,164,1.019,166,1.907,168,2.661,170,1.865,171,1.738,179,1.216,186,2.476,187,0.851,188,2.476,189,2.117,190,1.627,200,1.922,223,1.019,247,3.157,248,2.657,250,3.441,251,3.441,252,3.441,253,2.513,254,3.441,255,3.441,256,3.441,257,3.441,277,3.095,370,0.851,373,1.216,374,1.829,375,1.865,379,2.317,380,1.439,410,2.192,414,2.328,417,2.192,419,1.262,421,1.089,422,1.262,427,2.416,430,1.374,432,2.904,433,1.262,435,2.736,437,1.374,438,2.014,439,2.192,440,1.374,461,2.014,462,1.627,467,2.014,470,1.627,471,2.869,475,1.701,476,1.701,477,1.865,495,1.701,496,1.985,497,1.985,498,1.985,499,1.985,500,1.985,501,1.985,502,1.985,503,1.985,504,1.985,505,1.985,506,2.715,507,3.169,508,3.169,509,3.169,510,3.169,511,3.169,512,3.169,513,3.169,514,3.169,515,3.169,516,1.701,517,3.169,518,1.985,519,1.985,520,1.985,521,1.985,522,1.985,523,1.985]],["title/classes/Genero.html",[30,0.156,447,1.865]],["body/classes/Genero.html",[3,0.232,4,0.203,5,0.203,7,0.609,11,0.019,17,0.997,20,1.24,21,0.262,29,0.232,30,0.203,36,0.016,37,0.016,98,0.997,99,1.619,182,1.397,185,2.036,187,2.757,189,2.468,200,2,301,3.787,447,3.03,524,4.053,525,4.731,526,4.731,527,4.731,528,3.607]],["title/controllers/GenerosController.html",[0,1.129,529,2.513]],["body/controllers/GenerosController.html",[0,0.824,2,0.824,3,0.13,4,0.113,5,0.113,7,0.341,8,1.169,10,1.943,11,0.02,12,1.56,13,2.74,17,0.873,19,1.58,20,1.185,21,0.339,22,0.461,23,3.035,24,1.36,25,0.743,29,0.13,30,0.114,31,0.914,32,0.867,33,2.892,34,1.663,36,0.011,37,0.011,82,1.453,91,3.708,96,1.636,97,1.402,98,0.816,99,1.265,100,2.033,110,2.332,111,1.56,112,1.56,113,2.332,114,1.453,115,1.453,116,0.867,117,2.173,132,1.453,179,1.82,200,2.038,224,1.799,253,2.517,299,3.098,370,1.136,373,1.519,374,2.133,375,1.56,376,1.684,379,3.035,380,1.203,381,1.684,382,2.517,384,3.098,386,2.332,387,2.517,389,1.684,390,1.56,397,1.833,400,1.684,401,1.684,402,1.684,447,3.367,461,2.517,462,2.033,463,2.74,467,1.684,468,2.02,470,1.36,472,1.833,473,2.74,482,2.02,483,2.02,486,1.833,487,1.833,529,2.74,530,2.27,531,2.649,532,2.649,533,2.649,534,2.649,535,3.345,536,2.649,537,2.27,538,2.27,539,2.332,540,2.27,541,2.649,542,2.649,543,2.649,544,2.649,545,2.649,546,2.649,547,2.649,548,2.649]],["title/modules/GenerosModule.html",[38,1.073,48,2.309]],["body/modules/GenerosModule.html",[2,1.735,3,0.212,4,0.185,5,0.185,11,0.02,21,0.374,22,0.754,29,0.212,30,0.186,36,0.015,37,0.015,38,1.648,40,1.755,41,2.261,48,4.526,53,2.534,54,1.967,55,1.967,57,2.691,58,2.865,116,1.418,137,2.961,141,2.376,144,2.376,146,2.376,147,1.967,529,4.271,539,4.067,540,3.71,549,3.71,550,3.71,551,4.331,552,4.331,553,4.331]],["title/injectables/GenerosService.html",[68,0.919,539,2.139]],["body/injectables/GenerosService.html",[3,0.125,4,0.109,5,0.109,7,0.329,8,1.138,11,0.02,17,0.938,19,1.636,20,1.231,21,0.335,22,0.445,29,0.125,30,0.11,31,0.881,32,0.837,34,1.638,36,0.01,37,0.01,52,1.879,68,0.976,69,1.095,96,1.813,97,1.554,98,0.904,99,1.402,100,2.994,105,1.232,155,3.392,156,1.312,157,1.312,160,2.383,164,1.312,166,1.859,168,2.919,170,1.504,171,1.402,179,1.479,189,1.781,200,1.937,223,1.312,247,1.161,277,2.732,299,3.043,370,1.095,373,1.479,374,2.095,375,2.269,379,2.654,380,1.751,410,2.667,414,2.269,417,2.667,419,1.624,421,1.402,422,1.624,432,1.504,433,1.624,435,3.211,437,1.768,438,1.624,439,1.768,440,2.667,447,1.312,461,2.45,462,1.979,467,2.45,470,1.979,506,3.303,535,3.285,537,2.189,538,2.189,539,2.269,554,2.189,555,2.556,556,2.556,557,2.556,558,2.556,559,2.556,560,2.556,561,2.556,562,2.556,563,2.556,564,2.556,565,2.556,566,2.556,567,2.556,568,2.556]],["title/controllers/HomepageController.html",[0,1.129,569,2.513]],["body/controllers/HomepageController.html",[0,0.988,2,0.988,3,0.156,4,0.136,5,0.136,7,0.409,8,1.335,10,1.816,11,0.02,17,0.816,19,1.477,20,1.286,21,0.336,22,0.553,23,2.945,24,1.631,25,0.891,29,0.156,30,0.136,31,1.096,32,1.04,33,2.703,34,1.555,36,0.012,37,0.012,82,1.743,96,1.637,97,1.403,98,0.816,99,1.265,114,1.743,115,1.743,116,1.04,117,2.48,125,2.019,132,1.743,224,2.861,302,4.359,305,3.874,317,3.128,320,2.945,374,1.832,386,3.709,390,1.87,430,4.584,447,2.322,569,3.128,570,2.722,571,3.177,572,3.874,573,3.874,574,2.722,575,3.177,576,3.177,577,2.722,578,3.177,579,3.177,580,2.722,581,3.177,582,3.874,583,3.177,584,2.722,585,3.099,586,2.722,587,3.177,588,3.177,589,3.177,590,3.177,591,3.177,592,3.177,593,3.177,594,3.177,595,3.177,596,3.177,597,3.177,598,3.177]],["title/modules/HomepageModule.html",[38,1.073,49,2.309]],["body/modules/HomepageModule.html",[2,1.735,3,0.212,4,0.185,5,0.185,11,0.02,21,0.374,22,0.754,29,0.212,30,0.186,36,0.015,37,0.015,38,1.648,40,1.755,41,2.261,49,4.526,53,2.534,54,1.967,55,1.967,57,2.691,58,2.865,116,1.418,137,2.961,141,2.376,144,2.376,146,2.376,147,1.967,569,4.271,585,4.067,586,3.71,599,3.71,600,3.71,601,4.331,602,4.331,603,4.331]],["title/injectables/HomepageService.html",[68,0.919,585,2.139]],["body/injectables/HomepageService.html",[3,0.155,4,0.136,5,0.136,7,0.408,8,1.333,11,0.02,17,0.888,19,1.475,20,1.24,21,0.291,22,0.551,29,0.155,30,0.136,31,1.093,32,1.037,34,1.333,36,0.012,37,0.012,52,2.083,68,1.142,69,1.358,96,1.781,97,1.527,98,0.888,99,1.377,155,3.249,156,1.627,157,1.627,160,2.317,164,1.627,166,2.535,168,2.535,186,1.738,187,1.358,188,1.738,189,1.216,190,2.699,200,1.403,247,2.75,253,2.014,301,3.095,317,3.123,374,1.829,414,2.657,430,4.355,432,1.865,434,2.715,447,1.627,516,3.867,528,2.416,572,3.867,573,3.867,574,3.867,577,3.867,580,3.867,585,2.657,604,2.715,605,3.169,606,3.169,607,3.169,608,3.169,609,4.514]],["title/injectables/JwtStrategy.html",[68,0.919,138,2.309]],["body/injectables/JwtStrategy.html",[3,0.179,4,0.156,5,0.156,7,0.47,8,1.471,11,0.02,17,0.772,19,1.023,20,0.672,21,0.353,22,0.635,29,0.179,30,0.157,31,1.258,32,1.194,34,1.077,36,0.013,37,0.013,52,2.215,68,1.261,69,1.564,96,1.548,97,1.623,98,0.944,99,1.197,102,2.175,106,2.002,107,2.782,116,1.194,138,3.165,147,1.657,150,3.126,155,2.734,156,1.873,157,1.873,160,2.911,162,4.267,164,1.873,166,1.76,168,1.76,169,2.782,170,2.148,171,2.002,178,2.782,179,1.4,370,1.564,414,2.148,438,3.165,610,3.126,611,4.981,612,3.649,613,4.981,614,4.981,615,3.649,616,3.649,617,3.649,618,3.649,619,3.649,620,3.126,621,2.002,622,3.649,623,3.649,624,3.649,625,3.649,626,3.649,627,3.126,628,3.649,629,3.649,630,3.649,631,3.649,632,3.649]],["title/classes/LoginDto.html",[30,0.156,87,2.309]],["body/classes/LoginDto.html",[3,0.211,4,0.184,5,0.184,7,0.553,10,1.916,11,0.02,17,0.861,20,1.197,21,0.308,25,1.206,29,0.211,30,0.238,36,0.015,37,0.015,87,3.53,97,1.64,98,0.861,106,3.567,167,3.911,174,4.235,182,1.27,185,1.916,194,3.567,217,3.27,235,3.375,236,3.622,238,3.622,242,2.359,245,2.679,339,4.759,347,4.759,633,3.684,634,5.555,635,4.301,636,4.301]],["title/classes/LoginResponseDto.html",[30,0.156,121,2.309]],["body/classes/LoginResponseDto.html",[3,0.212,4,0.185,5,0.185,7,0.555,10,1.92,11,0.02,17,0.863,20,1.025,21,0.309,25,1.21,29,0.212,30,0.185,36,0.015,37,0.015,84,3.852,92,4.699,98,0.863,102,2.648,106,3.054,107,4.244,118,3.29,121,3.538,147,2.528,182,1.274,185,1.92,194,3.054,235,3.381,245,2.685,334,4.77,384,3.277,637,5.28,638,3.697,639,5.568,640,5.568,641,4.316,642,5.568,643,4.316]],["title/classes/Perfil.html",[30,0.156,320,1.865]],["body/classes/Perfil.html",[3,0.211,4,0.184,5,0.184,7,0.553,11,0.02,17,1.044,20,1.197,21,0.308,29,0.211,30,0.185,36,0.015,37,0.015,98,1.044,99,1.657,102,2.646,182,1.27,185,1.916,187,2.637,200,1.913,301,3.622,314,5.272,316,4.691,320,2.852,362,3.622,370,1.843,528,3.278,644,3.684,645,4.301,646,4.301,647,4.301,648,4.301,649,4.301]],["title/controllers/PerfilController.html",[0,1.129,650,2.513]],["body/controllers/PerfilController.html",[0,0.844,2,0.844,3,0.133,4,0.116,5,0.116,7,0.349,8,1.191,10,1.837,11,0.02,12,1.597,17,0.826,19,1.494,20,1.098,21,0.352,22,0.472,23,2.922,24,1.393,25,0.761,29,0.133,30,0.116,31,0.936,32,0.888,33,2.734,34,1.573,36,0.011,37,0.011,82,1.489,91,3.511,96,1.656,97,1.419,98,0.826,99,1.28,102,2.487,106,2.212,110,2.832,111,1.597,112,1.597,113,2.374,114,1.489,115,1.489,116,0.888,117,2.212,118,2.069,125,1.725,132,1.489,179,1.846,190,2.07,200,1.972,224,1.831,311,3.135,320,3.17,373,1.547,374,1.634,376,1.725,379,3.257,380,1.232,381,1.725,382,2.563,384,3.135,386,2.374,387,2.563,389,1.725,390,1.597,393,1.597,400,1.725,401,1.725,402,1.725,462,2.07,463,2.79,470,1.393,472,1.877,473,2.79,486,1.877,487,1.877,584,2.325,650,2.79,651,2.325,652,2.714,653,2.714,654,2.714,655,2.714,656,2.714,657,3.385,658,2.714,659,2.832,660,2.325,661,3.074,662,1.877,663,2.714,664,2.714,665,2.714,666,2.714,667,2.714,668,2.714,669,2.714,670,2.714]],["title/modules/PerfilModule.html",[38,1.073,50,2.309]],["body/modules/PerfilModule.html",[2,1.735,3,0.212,4,0.185,5,0.185,11,0.02,21,0.374,22,0.754,29,0.212,30,0.186,36,0.015,37,0.015,38,1.648,40,1.755,41,2.261,50,4.526,53,2.534,54,1.967,55,1.967,57,2.691,58,2.865,116,1.418,137,2.961,141,2.376,144,2.376,146,2.376,147,1.967,650,4.271,659,4.067,660,3.71,671,3.71,672,4.331,673,3.71,674,4.331,675,4.331]],["title/injectables/PerfilService.html",[68,0.919,659,2.139]],["body/injectables/PerfilService.html",[3,0.134,4,0.117,5,0.117,7,0.352,8,1.196,11,0.02,17,0.885,19,1.499,20,1.249,21,0.343,22,0.475,29,0.134,30,0.117,31,0.942,32,0.894,34,1.578,36,0.011,37,0.011,52,1.943,68,1.026,69,1.171,96,1.774,97,1.593,98,0.885,99,1.372,102,1.555,155,2.329,156,1.403,157,1.403,160,2.48,164,1.403,166,1.317,168,1.317,179,1.555,189,1.048,200,1.924,247,2.194,277,2.843,301,2.385,311,3.145,315,3.471,316,3.089,320,1.403,370,1.171,373,1.555,374,1.642,379,3.069,380,1.84,393,1.608,414,1.608,419,1.736,421,1.498,422,1.736,427,3.089,432,2.843,433,1.736,462,2.08,470,2.08,657,3.396,659,2.385,661,3.089,662,1.89,676,2.34,677,2.732,678,4.052,679,2.732,680,5.707,681,2.732,682,4.052,683,2.732,684,2.732,685,2.732,686,2.732,687,2.732,688,4.052,689,4.052,690,2.732,691,2.732,692,2.732,693,2.732,694,2.732]],["title/modules/PrismaModule.html",[38,1.073,137,1.557]],["body/modules/PrismaModule.html",[3,0.229,4,0.2,5,0.2,11,0.02,21,0.325,22,0.814,29,0.229,30,0.201,36,0.016,37,0.016,38,1.73,40,1.895,41,2.375,52,2.699,53,2.661,54,2.124,55,2.124,57,2.826,137,3.065,695,4.007,696,4.007,697,4.677,698,4.677,699,5.86,700,4.677]],["title/injectables/PrismaService.html",[52,1.321,68,0.919]],["body/injectables/PrismaService.html",[3,0.209,4,0.183,5,0.183,7,0.55,8,1.633,11,0.02,17,0.857,19,1.551,21,0.306,22,0.743,29,0.209,30,0.183,36,0.015,37,0.015,52,2.011,68,1.4,69,1.83,96,1.327,97,1.138,98,0.662,99,1.026,155,3.378,168,2.667,370,1.83,621,3.033,701,3.659,702,6.133,703,5.53,704,6.883,705,5.53,706,6.486,707,4.271,708,3.659,709,4.271,710,4.271,711,4.271,712,4.271,713,4.271]],["title/classes/UpdateFavoriteDto.html",[30,0.156,714,2.77]],["body/classes/UpdateFavoriteDto.html",[3,0.258,4,0.225,5,0.225,11,0.019,21,0.349,25,1.475,29,0.258,30,0.226,36,0.017,37,0.017,181,3.095,182,1.552,184,4.008,373,2.017,394,4.008,621,2.884,714,4.799,715,4.505,716,3.342,717,5.258]],["title/classes/UpdateGameDto.html",[30,0.156,471,2.309]],["body/classes/UpdateGameDto.html",[3,0.259,4,0.226,5,0.226,11,0.02,21,0.35,29,0.259,30,0.227,36,0.017,37,0.017,182,1.559,248,3.108,471,4.011,621,2.897,716,3.356,718,4.524,719,4.025,720,4.025,721,5.281,722,5.281]],["title/classes/UpdateGeneroDto.html",[30,0.156,535,2.309]],["body/classes/UpdateGeneroDto.html",[3,0.259,4,0.226,5,0.226,11,0.02,21,0.35,29,0.259,30,0.227,36,0.017,37,0.017,182,1.559,299,3.108,535,4.011,621,2.897,716,3.356,719,4.025,720,4.025,723,4.524,724,5.281,725,5.281]],["title/classes/UpdatePerfilDto.html",[30,0.156,657,2.309]],["body/classes/UpdatePerfilDto.html",[3,0.258,4,0.225,5,0.225,11,0.019,21,0.349,25,1.475,29,0.258,30,0.226,36,0.017,37,0.017,182,1.552,311,3.095,313,4.008,373,2.017,621,2.884,657,4.001,661,4.008,716,3.342,726,4.505,727,5.258]],["title/classes/UpdateUserDto.html",[30,0.156,728,2.309]],["body/classes/UpdateUserDto.html",[3,0.258,4,0.225,5,0.225,11,0.019,21,0.349,25,1.475,29,0.258,30,0.226,36,0.017,37,0.017,182,1.552,328,3.095,330,4.008,373,2.017,621,2.884,716,3.342,728,4.001,729,4.505,730,4.008,731,5.258]],["title/classes/User.html",[30,0.156,102,1.394]],["body/classes/User.html",[3,0.214,4,0.187,5,0.187,7,0.561,11,0.019,17,1.073,20,1.337,29,0.214,30,0.187,36,0.015,37,0.015,97,1.651,98,1.073,99,1.571,102,2.151,167,3.937,182,1.288,185,1.933,200,1.926,332,4.722,333,4.722,732,3.737,733,5.307,734,4.362,735,4.362,736,4.362,737,5.606,738,4.362,739,4.362,740,4.362]],["title/controllers/UserController.html",[0,1.129,741,2.513]],["body/controllers/UserController.html",[0,0.81,2,0.81,3,0.128,4,0.111,5,0.111,7,0.335,8,1.155,10,1.929,11,0.02,12,1.533,13,2.705,17,0.867,19,1.569,20,1.18,21,0.325,22,0.453,23,3.016,24,1.337,25,0.73,29,0.128,30,0.112,31,0.898,32,0.853,33,2.871,34,1.651,36,0.01,37,0.01,82,1.429,91,3.689,96,1.622,97,1.391,98,0.809,99,1.254,102,0.999,106,3.438,110,2.302,111,1.533,112,1.533,113,2.302,114,1.429,115,1.429,116,0.853,117,3.068,132,2.862,179,1.801,200,1.993,224,1.776,328,3.458,373,1.5,374,2.115,376,1.655,380,1.183,381,1.655,382,2.485,384,2.302,386,2.302,387,2.485,389,1.655,390,1.533,393,1.533,397,1.802,400,1.655,401,1.655,402,1.655,461,2.485,462,2.008,463,2.705,467,1.655,468,1.985,470,1.337,472,1.802,473,2.705,482,1.985,483,1.985,486,1.802,487,1.802,582,4.471,662,1.802,728,3.983,730,2.981,741,2.705,742,2.231,743,2.604,744,3.91,745,2.604,746,4.695,747,2.604,748,2.604,749,2.604,750,2.604,751,2.604,752,2.764,753,2.231,754,2.604,755,2.604,756,2.604,757,2.604,758,2.604,759,2.604,760,2.604,761,2.604]],["title/modules/UserModule.html",[38,1.073,51,2.309]],["body/modules/UserModule.html",[2,1.735,3,0.212,4,0.185,5,0.185,11,0.02,21,0.374,22,0.754,29,0.212,30,0.186,36,0.015,37,0.015,38,1.648,40,1.755,41,2.261,51,4.526,53,2.534,54,1.967,55,1.967,57,2.691,58,2.865,116,1.418,137,2.961,141,2.376,144,2.376,146,2.376,147,1.967,741,4.271,752,4.067,753,3.71,762,3.71,763,4.331,764,3.71,765,4.331,766,4.331]],["title/injectables/UserService.html",[68,0.919,752,2.139]],["body/injectables/UserService.html",[3,0.11,4,0.096,5,0.096,7,0.288,8,1.027,11,0.02,17,0.895,19,1.465,20,1.129,21,0.32,22,0.389,29,0.11,30,0.096,31,0.771,32,0.732,34,1.542,36,0.009,37,0.009,52,1.752,68,0.88,69,0.958,96,1.623,97,1.538,98,0.857,99,1.255,100,3.065,102,1.334,105,1.078,155,2.957,156,1.147,157,1.147,160,1.786,163,2.652,164,1.147,165,3.659,166,2.059,167,2.714,168,2.324,169,1.704,170,2.514,171,2.342,179,1.849,185,1.2,200,1.949,223,1.147,247,2.189,277,2.837,303,2.98,328,2.837,332,2.652,333,2.652,373,1.638,374,1.953,375,2.048,379,2.839,380,1.58,393,1.316,410,2.406,417,2.406,419,1.42,421,1.226,422,1.42,432,2.837,433,2.211,435,2.954,437,1.546,438,2.714,439,1.546,440,1.546,462,2.193,470,1.786,627,5.115,662,1.546,728,3.063,730,2.652,733,2.98,752,2.048,767,1.915,768,4.27,769,2.235,770,2.235,771,2.235,772,2.235,773,2.235,774,2.235,775,2.235,776,1.915,777,1.915,778,2.235,779,2.235,780,2.235,781,2.235,782,2.235,783,4.819,784,4.27,785,4.819,786,3.478,787,3.478,788,3.478,789,3.478,790,2.235,791,2.98,792,3.478,793,2.235,794,3.478,795,2.235,796,2.235]],["title/coverage.html",[797,3.785]],["body/coverage.html",[0,1.971,1,1.873,5,0.116,6,2.32,11,0.02,26,1.594,30,0.303,36,0.011,37,0.011,52,0.985,68,1.669,70,2.32,80,1.873,81,2.32,87,1.721,98,0.42,102,1.039,119,1.594,121,1.721,125,1.721,138,1.721,154,2.32,171,1.485,181,1.594,183,2.32,184,3.069,187,1.161,248,1.594,249,2.32,299,1.594,300,2.32,311,1.594,312,2.32,313,3.069,320,1.39,328,1.594,329,2.32,330,3.069,362,1.594,363,2.32,371,1.873,372,2.32,391,1.594,409,2.32,421,1.485,442,2.32,447,1.39,459,1.873,460,2.32,471,1.721,477,1.594,495,2.32,524,2.32,529,1.873,530,2.32,535,1.721,539,1.594,554,2.32,569,1.873,570,2.32,585,1.594,604,2.32,610,2.32,633,2.32,637,2.32,638,2.32,644,2.32,650,1.873,651,2.32,657,1.721,659,1.594,676,2.32,701,2.32,714,2.064,715,2.32,718,2.32,723,2.32,726,2.32,728,1.721,729,2.32,732,2.32,741,1.873,742,2.32,752,1.594,767,2.32,797,2.064,798,2.708,799,2.708,800,2.708,801,7.47,802,4.026,803,6.171,804,2.32,805,2.708,806,6.34,807,6.34,808,4.026,809,4.805,810,2.708,811,2.708,812,4.805,813,4.805,814,2.32,815,4.026,816,2.32,817,2.32,818,2.708,819,2.708]],["title/dependencies.html",[41,1.771,820,2.596]],["body/dependencies.html",[11,0.02,22,0.764,25,1.232,30,0.242,36,0.015,37,0.015,41,1.78,78,3.763,116,1.438,143,3.349,147,1.995,163,3.349,242,2.41,370,1.883,620,5.325,719,3.349,720,3.349,821,6.216,822,4.393,823,4.393,824,4.393,825,4.393,826,4.393,827,5.631,828,4.393,829,4.393,830,4.393,831,4.393,832,4.393,833,4.393,834,4.393,835,4.393,836,4.393,837,4.393,838,4.393,839,4.393,840,4.393,841,4.393,842,4.393,843,4.393,844,4.393,845,4.393,846,4.393,847,4.393,848,4.393,849,4.393,850,4.393]],["title/miscellaneous/functions.html",[851,2.096,852,3.745]],["body/miscellaneous/functions.html",[7,0.677,11,0.019,19,1.475,36,0.017,37,0.017,96,1.634,97,1.401,98,0.815,99,1.264,421,3.453,814,4.505,816,5.773,817,4.505,851,3.638,852,4.505,853,5.258,854,5.258,855,5.258,856,6.738,857,5.258]],["title/index.html",[7,0.39,858,3.03,859,3.03]],["body/index.html",[4,0.174,11,0.02,36,0.014,37,0.014,72,3.489,75,3.489,245,1.964,307,3.489,708,3.489,797,3.104,860,4.072,861,4.072,862,5.361,863,4.072,864,4.072,865,4.072,866,4.072,867,4.072,868,5.993,869,4.072,870,4.072,871,4.072,872,4.072,873,6.927,874,4.072,875,4.072,876,6.794,877,4.072,878,4.072,879,5.361,880,4.072,881,4.072,882,4.072,883,4.072,884,5.361,885,5.361,886,4.072,887,4.072,888,4.072,889,5.361,890,5.361,891,4.072,892,4.072,893,4.072,894,4.072,895,3.489,896,4.072,897,4.072,898,4.072,899,4.072,900,4.072,901,4.072,902,4.072,903,4.072,904,4.072,905,3.489,906,4.072,907,4.072,908,4.072,909,4.072,910,4.072,911,4.072,912,3.489]],["title/modules.html",[40,2.012]],["body/modules.html",[11,0.016,36,0.016,37,0.016,39,3.324,40,1.947,45,3.054,46,3.054,47,3.054,48,3.054,49,3.054,50,3.054,51,3.054,137,2.06,895,6.278,913,7.328,914,7.328,915,7.328]],["title/overview.html",[916,4.254]],["body/overview.html",[2,0.982,11,0.02,26,3.091,36,0.012,37,0.012,39,5.052,40,1.281,41,1.826,42,2.708,43,2.708,44,2.708,45,4.28,46,4.114,47,4.114,48,4.114,49,4.114,50,4.114,51,4.114,52,2.406,53,2.046,54,1.435,55,1.435,69,1.355,119,3.091,134,2.708,135,2.708,136,2.708,137,2.992,138,3.337,182,0.933,391,3.091,404,2.708,406,2.708,477,3.091,490,2.708,492,2.708,539,3.091,549,2.708,550,2.708,585,3.091,599,2.708,600,2.708,659,3.091,671,2.708,673,2.708,695,2.708,696,2.708,752,3.091,762,2.708,764,2.708,791,2.708,916,2.708,917,3.161,918,3.161,919,3.161]],["title/properties.html",[185,1.508,820,2.596]],["body/properties.html",[11,0.02,36,0.017,37,0.017,185,1.92,245,2.685,905,4.77,912,4.77,920,5.568,921,5.568,922,5.568]],["title/miscellaneous/variables.html",[851,2.096,923,3.745]],["body/miscellaneous/variables.html",[7,0.665,11,0.02,34,1.526,36,0.017,37,0.017,102,2.391,125,3.96,166,3.005,178,3.941,179,1.983,776,4.429,777,4.429,804,4.429,851,3.576,923,4.429,924,5.169,925,5.169,926,5.169,927,5.169,928,5.169,929,5.169,930,5.169]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":921,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["0.27.2",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["04f66779",{"_index":202,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["0c0a262111f9",{"_index":233,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["1",{"_index":213,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["1.0.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":791,"title":{},"body":{"injectables/UserService.html":{},"overview.html":{}}}],["17",{"_index":919,"title":{},"body":{"overview.html":{}}}],["17/05/2022",{"_index":279,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["24h",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["3.0.2",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["43dc",{"_index":231,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["4c5c",{"_index":204,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["5",{"_index":214,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["5.0.1",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":918,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":917,"title":{},"body":{"overview.html":{}}}],["9e1b",{"_index":232,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["a140",{"_index":205,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["abcd@1234",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["adb96fd7",{"_index":229,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["amazing",{"_index":896,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":235,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('favorites",{"_index":395,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["apitags('game",{"_index":479,"title":{},"body":{"controllers/GameController.html":{}}}],["apitags('genero",{"_index":541,"title":{},"body":{"controllers/GenerosController.html":{}}}],["apitags('homepage",{"_index":587,"title":{},"body":{"controllers/HomepageController.html":{}}}],["apitags('perfil",{"_index":663,"title":{},"body":{"controllers/PerfilController.html":{}}}],["apitags('status",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":754,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":708,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":713,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":867,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":39,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":26,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["autenticado",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":80,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":45,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":905,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":119,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["aventura",{"_index":264,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["await",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["axios",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["ação",{"_index":262,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["backers",{"_index":897,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["bcfa",{"_index":203,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["bcrypt",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":737,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":915,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":913,"title":{},"body":{"modules.html":{}}}],["building",{"_index":863,"title":{},"body":{"index.html":{}}}],["cadastrar",{"_index":463,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["capa",{"_index":186,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{}}}],["catch(handleerror",{"_index":433,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["cdcf",{"_index":230,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["check",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["class",{"_index":30,"title":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"classes/Genero.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":182,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"classes/Genero.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_favoritemodule",{"_index":404,"title":{},"body":{"modules/FavoriteModule.html":{},"overview.html":{}}}],["cluster_favoritemodule_imports",{"_index":405,"title":{},"body":{"modules/FavoriteModule.html":{}}}],["cluster_favoritemodule_providers",{"_index":406,"title":{},"body":{"modules/FavoriteModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":490,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":491,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamemodule_providers",{"_index":492,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_generosmodule",{"_index":549,"title":{},"body":{"modules/GenerosModule.html":{},"overview.html":{}}}],["cluster_generosmodule_imports",{"_index":551,"title":{},"body":{"modules/GenerosModule.html":{}}}],["cluster_generosmodule_providers",{"_index":550,"title":{},"body":{"modules/GenerosModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":599,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":601,"title":{},"body":{"modules/HomepageModule.html":{}}}],["cluster_homepagemodule_providers",{"_index":600,"title":{},"body":{"modules/HomepageModule.html":{},"overview.html":{}}}],["cluster_perfilmodule",{"_index":671,"title":{},"body":{"modules/PerfilModule.html":{},"overview.html":{}}}],["cluster_perfilmodule_imports",{"_index":672,"title":{},"body":{"modules/PerfilModule.html":{}}}],["cluster_perfilmodule_providers",{"_index":673,"title":{},"body":{"modules/PerfilModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":695,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":696,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":697,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_usermodule",{"_index":762,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":763,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":764,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":223,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["confirmação",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":427,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/PerfilService.html":{}}}],["const",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('favorite",{"_index":396,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["controller('game",{"_index":480,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('genero",{"_index":542,"title":{},"body":{"controllers/GenerosController.html":{}}}],["controller('homepage",{"_index":588,"title":{},"body":{"controllers/HomepageController.html":{}}}],["controller('perfil",{"_index":664,"title":{},"body":{"controllers/PerfilController.html":{}}}],["controller('user",{"_index":755,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":797,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["create",{"_index":373,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":397,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser()user",{"_index":667,"title":{},"body":{"controllers/PerfilController.html":{}}}],["create(createfavoritedto",{"_index":412,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["create(createuserdto",{"_index":743,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":375,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":652,"title":{},"body":{"controllers/PerfilController.html":{}}}],["create(userid",{"_index":678,"title":{},"body":{"injectables/PerfilService.html":{}}}],["create.game.dto",{"_index":721,"title":{},"body":{"classes/UpdateGameDto.html":{}}}],["create.genero.dto",{"_index":724,"title":{},"body":{"classes/UpdateGeneroDto.html":{}}}],["createfavoritedto",{"_index":181,"title":{"classes/CreateFavoriteDto.html":{}},"body":{"classes/CreateFavoriteDto.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["createfavoritedto.capa",{"_index":425,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["createfavoritedto.game",{"_index":428,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["createfavoritedto.imdbscore",{"_index":426,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["createfavoritedto.nome",{"_index":424,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["createfavoritedto.perfis.map((perfilid",{"_index":429,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["creategamedto",{"_index":248,"title":{"classes/CreateGameDto.html":{}},"body":{"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["creategenerodto",{"_index":299,"title":{"classes/CreateGeneroDto.html":{}},"body":{"classes/CreateGeneroDto.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createperfildto",{"_index":311,"title":{"classes/CreatePerfilDto.html":{}},"body":{"classes/CreatePerfilDto.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":328,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ctx",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":642,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":277,"title":{},"body":{"classes/CreateGameDto.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["de",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":776,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["definitive",{"_index":219,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["delete",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":400,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":381,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":402,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":380,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":41,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descricao",{"_index":250,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["description",{"_index":245,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"index.html":{},"properties.html":{}}}],["descrição",{"_index":260,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["desenvolvedora",{"_index":267,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["desse",{"_index":304,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["deve",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["developer",{"_index":251,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["development",{"_index":875,"title":{},"body":{"index.html":{}}}],["docs",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["dos",{"_index":226,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["dots",{"_index":269,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["dto",{"_index":379,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["dto.capa",{"_index":507,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.confirmpassword",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.descricao",{"_index":508,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.developer",{"_index":511,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.gameplay",{"_index":515,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.games.map((gameid",{"_index":692,"title":{},"body":{"injectables/PerfilService.html":{}}}],["dto.generos.map((generonome",{"_index":520,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.imageurl",{"_index":689,"title":{},"body":{"injectables/PerfilService.html":{}}}],["dto.imdbscore",{"_index":513,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.lancamento",{"_index":510,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.nome",{"_index":506,"title":{},"body":{"injectables/GameService.html":{},"injectables/GenerosService.html":{}}}],["dto.password",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.perfis.map((perfilid",{"_index":522,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.plataformas",{"_index":509,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.publisher",{"_index":512,"title":{},"body":{"injectables/GameService.html":{}}}],["dto.title",{"_index":688,"title":{},"body":{"injectables/PerfilService.html":{}}}],["dto.trailer",{"_index":514,"title":{},"body":{"injectables/GameService.html":{}}}],["dto/create",{"_index":393,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/create.game.dto",{"_index":475,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["dto/create.genero.dto",{"_index":537,"title":{},"body":{"controllers/GenerosController.html":{},"injectables/GenerosService.html":{}}}],["dto/login",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":662,"title":{},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/update.game.dto",{"_index":476,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["dto/update.genero.dto",{"_index":538,"title":{},"body":{"controllers/GenerosController.html":{},"injectables/GenerosService.html":{}}}],["e",{"_index":263,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["e/ou",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":886,"title":{},"body":{"index.html":{}}}],["each",{"_index":198,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["editar",{"_index":473,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["edition",{"_index":220,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["efficient",{"_index":864,"title":{},"body":{"index.html":{}}}],["email",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["empresa",{"_index":266,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["enableshutdownhooks",{"_index":703,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":705,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":439,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["endereço",{"_index":322,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["entities/favorite.entity",{"_index":420,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["entities/game.entity",{"_index":503,"title":{},"body":{"injectables/GameService.html":{}}}],["entities/genero.entity",{"_index":562,"title":{},"body":{"injectables/GenerosService.html":{}}}],["entities/perfil.entity",{"_index":685,"title":{},"body":{"injectables/PerfilService.html":{}}}],["entities/user.entity",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["est",{"_index":632,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["estrelas",{"_index":215,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["estão",{"_index":319,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["example",{"_index":194,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":630,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":699,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":621,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":618,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":625,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f234138890f3",{"_index":206,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["false",{"_index":627,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["favoritado",{"_index":201,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favoritar",{"_index":377,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["favoritaram",{"_index":228,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite",{"_index":362,"title":{"classes/Favorite.html":{}},"body":{"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Perfil.html":{},"coverage.html":{}}}],["favorite.controller",{"_index":408,"title":{},"body":{"modules/FavoriteModule.html":{}}}],["favorite.dto",{"_index":394,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/UpdateFavoriteDto.html":{}}}],["favorite.dto.ts",{"_index":184,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["favorite.dto.ts:12",{"_index":221,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.dto.ts:20",{"_index":196,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.dto.ts:28",{"_index":216,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.dto.ts:36",{"_index":234,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.dto.ts:44",{"_index":207,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["favorite.service",{"_index":392,"title":{},"body":{"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{}}}],["favorite/favorite.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["favoritecontroller",{"_index":371,"title":{"controllers/FavoriteController.html":{}},"body":{"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"coverage.html":{}}}],["favoritemodule",{"_index":46,"title":{"modules/FavoriteModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FavoriteModule.html":{},"modules.html":{},"overview.html":{}}}],["favorites",{"_index":314,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/Perfil.html":{}}}],["favoriteservice",{"_index":391,"title":{"injectables/FavoriteService.html":{}},"body":{"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"coverage.html":{},"overview.html":{}}}],["favorito",{"_index":383,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["favoritos",{"_index":317,"title":{},"body":{"classes/CreatePerfilDto.html":{},"controllers/FavoriteController.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":374,"title":{},"body":{"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser()user",{"_index":665,"title":{},"body":{"controllers/PerfilController.html":{}}}],["findall(@param('id",{"_index":590,"title":{},"body":{"controllers/HomepageController.html":{}}}],["findall(perfilid",{"_index":574,"title":{},"body":{"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["findall(user",{"_index":655,"title":{},"body":{"controllers/PerfilController.html":{}}}],["findall(userid",{"_index":682,"title":{},"body":{"injectables/PerfilService.html":{}}}],["findbyid",{"_index":410,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":417,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["findfavorites",{"_index":572,"title":{},"body":{"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["findfavorites(@param('id",{"_index":593,"title":{},"body":{"controllers/HomepageController.html":{}}}],["findfavorites(perfilid",{"_index":577,"title":{},"body":{"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["findgamesbygenre",{"_index":573,"title":{},"body":{"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["findgamesbygenre(@param('genero",{"_index":596,"title":{},"body":{"controllers/HomepageController.html":{}}}],["findgamesbygenre(genero",{"_index":580,"title":{},"body":{"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["findone",{"_index":461,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":483,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":467,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/UserController.html":{}}}],["foi",{"_index":286,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["foto",{"_index":192,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["fraca",{"_index":361,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":862,"title":{},"body":{"index.html":{}}}],["fulano123",{"_index":326,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["fulano@gmail.com",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["function",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":852,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":187,"title":{"classes/Game.html":{}},"body":{"classes/CreateFavoriteDto.html":{},"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"injectables/HomepageService.html":{},"classes/Perfil.html":{},"coverage.html":{}}}],["game.controller",{"_index":494,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":478,"title":{},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["gamecontroller",{"_index":459,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gameid",{"_index":693,"title":{},"body":{"injectables/PerfilService.html":{}}}],["gamemodule",{"_index":47,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameplay",{"_index":252,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["games",{"_index":301,"title":{},"body":{"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/Genero.html":{},"injectables/HomepageService.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{}}}],["gameservice",{"_index":477,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["genero",{"_index":447,"title":{"classes/Genero.html":{}},"body":{"classes/Game.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"coverage.html":{}}}],["generonome",{"_index":521,"title":{},"body":{"injectables/GameService.html":{}}}],["generos",{"_index":253,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/HomepageService.html":{}}}],["generos.controller",{"_index":553,"title":{},"body":{"modules/GenerosModule.html":{}}}],["generos.service",{"_index":540,"title":{},"body":{"controllers/GenerosController.html":{},"modules/GenerosModule.html":{}}}],["generos/generos.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["generoscontroller",{"_index":529,"title":{"controllers/GenerosController.html":{}},"body":{"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"coverage.html":{}}}],["generoservice",{"_index":543,"title":{},"body":{"controllers/GenerosController.html":{}}}],["generosmodule",{"_index":48,"title":{"modules/GenerosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GenerosModule.html":{},"modules.html":{},"overview.html":{}}}],["generosservice",{"_index":539,"title":{"injectables/GenerosService.html":{}},"body":{"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"coverage.html":{},"overview.html":{}}}],["gerado",{"_index":639,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":482,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":468,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/UserController.html":{}}}],["get('favoritos/:id",{"_index":592,"title":{},"body":{"controllers/HomepageController.html":{}}}],["get('favoritos/:id')@apioperation({summary",{"_index":578,"title":{},"body":{"controllers/HomepageController.html":{}}}],["get('genero/:id",{"_index":595,"title":{},"body":{"controllers/HomepageController.html":{}}}],["get('genero/:id')@apioperation({summary",{"_index":581,"title":{},"body":{"controllers/HomepageController.html":{}}}],["get('jogos/:id",{"_index":589,"title":{},"body":{"controllers/HomepageController.html":{}}}],["get('jogos/:id')@apioperation({summary",{"_index":575,"title":{},"body":{"controllers/HomepageController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":858,"title":{"index.html":{}},"body":{}}],["grow",{"_index":892,"title":{},"body":{"index.html":{}}}],["gênero",{"_index":305,"title":{},"body":{"classes/CreateGeneroDto.html":{},"controllers/HomepageController.html":{}}}],["handleerror",{"_index":421,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":902,"title":{},"body":{"index.html":{}}}],["hilton",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["homepage",{"_index":571,"title":{},"body":{"controllers/HomepageController.html":{}}}],["homepage.controller",{"_index":603,"title":{},"body":{"modules/HomepageModule.html":{}}}],["homepage.service",{"_index":586,"title":{},"body":{"controllers/HomepageController.html":{},"modules/HomepageModule.html":{}}}],["homepage/homepage.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagecontroller",{"_index":569,"title":{"controllers/HomepageController.html":{}},"body":{"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"coverage.html":{}}}],["homepagemodule",{"_index":49,"title":{"modules/HomepageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomepageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageservice",{"_index":585,"title":{"injectables/HomepageService.html":{}},"body":{"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"coverage.html":{},"overview.html":{}}}],["http://imagemdeperfil.com",{"_index":324,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["http://localhost:3333/api",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["httpcode",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":401,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://cdn.cloudflare.steamstatic.com/steam/apps/794260/header.jpg?t=1652856127",{"_index":195,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["https://nestjs.com",{"_index":909,"title":{},"body":{"index.html":{}}}],["https://www.youtube.com/watch?v=7krjwypsmnc",{"_index":273,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["https://www.youtube.com/watch?v=gy6bya_yikw",{"_index":296,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["httpstatus",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":200,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":746,"title":{},"body":{"controllers/UserController.html":{}}}],["id:perfilid",{"_index":609,"title":{},"body":{"injectables/HomepageService.html":{}}}],["identifier",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":225,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["ignoreexpiration",{"_index":626,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["imagem",{"_index":323,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["imageurl",{"_index":315,"title":{},"body":{"classes/CreatePerfilDto.html":{},"injectables/PerfilService.html":{}}}],["imbd",{"_index":212,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["imdbscore",{"_index":188,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{}}}],["implements",{"_index":710,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":706,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informadas",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":68,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":872,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":874,"title":{},"body":{"index.html":{}}}],["internal",{"_index":243,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["inválidos",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":733,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["isbic",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isboolean",{"_index":298,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{}}}],["ishashvalid",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":236,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["ispositive",{"_index":237,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["ispositive()@max(5)@apiproperty({description",{"_index":209,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["isstring",{"_index":238,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":259,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":217,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":239,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":191,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["isuuid",{"_index":240,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["isuuid(undefined",{"_index":197,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["jogo",{"_index":193,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{}}}],["jogos",{"_index":302,"title":{},"body":{"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"controllers/GameController.html":{},"controllers/HomepageController.html":{}}}],["join",{"_index":899,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/PerfilModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":624,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":138,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":906,"title":{},"body":{"index.html":{}}}],["lancamento",{"_index":254,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["lançado",{"_index":287,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["lançamento",{"_index":278,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["license",{"_index":912,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":890,"title":{},"body":{"index.html":{}}}],["lista",{"_index":222,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["listar",{"_index":386,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":614,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["loggeduser",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggeduser.decorator",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["login",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":87,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":121,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["matches",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matter",{"_index":294,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["max",{"_index":241,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["max(5",{"_index":246,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["message",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":851,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":889,"title":{},"body":{"index.html":{}}}],["mode",{"_index":879,"title":{},"body":{"index.html":{}}}],["module",{"_index":38,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":40,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":901,"title":{},"body":{"index.html":{}}}],["muito",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":907,"title":{},"body":{"index.html":{}}}],["n",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["na",{"_index":211,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["name",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":868,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":911,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":719,"title":{},"body":{"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nickname",{"_index":634,"title":{},"body":{"classes/LoginDto.html":{}}}],["nine",{"_index":268,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["node.js",{"_index":861,"title":{},"body":{"index.html":{}}}],["nome",{"_index":189,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/PerfilService.html":{}}}],["nota",{"_index":210,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["notfoundexception",{"_index":419,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('jogo",{"_index":518,"title":{},"body":{"injectables/GameService.html":{}}}],["notfoundexception(`registro",{"_index":437,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["novo",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["npm",{"_index":873,"title":{},"body":{"index.html":{}}}],["number",{"_index":208,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{}}}],["não",{"_index":438,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["número",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["o",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["onmoduleinit",{"_index":704,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":307,"title":{},"body":{"classes/CreateGeneroDto.html":{},"index.html":{}}}],["optional",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":224,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":631,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["outward",{"_index":218,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{}}}],["overview",{"_index":916,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":820,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":284,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{}}}],["param",{"_index":390,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["param('perfilid",{"_index":597,"title":{},"body":{"controllers/HomepageController.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["partialtype",{"_index":716,"title":{},"body":{"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createfavoritedto",{"_index":717,"title":{},"body":{"classes/UpdateFavoriteDto.html":{}}}],["partialtype(creategamedto",{"_index":722,"title":{},"body":{"classes/UpdateGameDto.html":{}}}],["partialtype(creategenerodto",{"_index":725,"title":{},"body":{"classes/UpdateGeneroDto.html":{}}}],["partialtype(createperfildto",{"_index":727,"title":{},"body":{"classes/UpdatePerfilDto.html":{}}}],["partialtype(createuserdto",{"_index":731,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":620,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":617,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":622,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":389,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":486,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":472,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":616,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":629,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pc",{"_index":288,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["pelo",{"_index":384,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["perfil",{"_index":320,"title":{"classes/Perfil.html":{}},"body":{"classes/CreatePerfilDto.html":{},"classes/Game.html":{},"controllers/HomepageController.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"coverage.html":{}}}],["perfil.controller",{"_index":675,"title":{},"body":{"modules/PerfilModule.html":{}}}],["perfil.dto",{"_index":661,"title":{},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdatePerfilDto.html":{}}}],["perfil.dto.ts",{"_index":313,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["perfil.dto.ts:11",{"_index":327,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.dto.ts:18",{"_index":325,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.dto.ts:27",{"_index":321,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.dto.ts:35",{"_index":318,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.service",{"_index":660,"title":{},"body":{"controllers/PerfilController.html":{},"modules/PerfilModule.html":{}}}],["perfil/perfil.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["perfilcontroller",{"_index":650,"title":{"controllers/PerfilController.html":{}},"body":{"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"coverage.html":{}}}],["perfilid",{"_index":430,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{}}}],["perfilmodule",{"_index":50,"title":{"modules/PerfilModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PerfilModule.html":{},"modules.html":{},"overview.html":{}}}],["perfilservice",{"_index":659,"title":{"injectables/PerfilService.html":{}},"body":{"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"coverage.html":{},"overview.html":{}}}],["perfis",{"_index":190,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"injectables/HomepageService.html":{},"controllers/PerfilController.html":{}}}],["plataformas",{"_index":255,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["playstation",{"_index":290,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["please",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["por",{"_index":582,"title":{},"body":{"controllers/HomepageController.html":{},"controllers/UserController.html":{}}}],["post",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":376,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["prime",{"_index":293,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["prisma",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["prisma.favoritecreateinput",{"_index":423,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["prisma.gamecreateinput",{"_index":519,"title":{},"body":{"injectables/GameService.html":{}}}],["prisma.generocreateinput",{"_index":567,"title":{},"body":{"injectables/GenerosService.html":{}}}],["prisma.perfilcreateinput",{"_index":691,"title":{},"body":{"injectables/PerfilService.html":{}}}],["prisma.service",{"_index":700,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":370,"title":{},"body":{"classes/Favorite.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"injectables/JwtStrategy.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":702,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":137,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":52,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":881,"title":{},"body":{"index.html":{}}}],["profile",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser()user",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":860,"title":{},"body":{"index.html":{}}}],["project",{"_index":891,"title":{},"body":{"index.html":{}}}],["promise",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":185,"title":{"properties.html":{}},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"classes/Game.html":{},"classes/Genero.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["publicadora",{"_index":292,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["publisher",{"_index":256,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["quais",{"_index":285,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["que",{"_index":227,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["read",{"_index":900,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizar",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["record",{"_index":435,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["remover",{"_index":382,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["repository",{"_index":871,"title":{},"body":{"index.html":{}}}],["request",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":638,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":643,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":641,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["rpg",{"_index":261,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["run",{"_index":876,"title":{},"body":{"index.html":{}}}],["running",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":865,"title":{},"body":{"index.html":{}}}],["secret",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":628,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":432,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["senha",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["ser",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["side",{"_index":866,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"modules/FavoriteModule.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"modules/GenerosModule.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"modules/HomepageModule.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateFavoriteDto.html":{},"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":894,"title":{},"body":{"index.html":{}}}],["src/.../handle.error.utils.ts",{"_index":854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loggeduser.decorator.ts",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":637,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":633,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":635,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":636,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":615,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":612,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/loggeduser.decorator",{"_index":584,"title":{},"body":{"controllers/HomepageController.html":{},"controllers/PerfilController.html":{}}}],["src/auth/loggeduser.decorator.ts",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/favorite/dto/create",{"_index":183,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"coverage.html":{}}}],["src/favorite/dto/update",{"_index":715,"title":{},"body":{"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["src/favorite/entities/favorite.entity.ts",{"_index":363,"title":{},"body":{"classes/Favorite.html":{},"coverage.html":{}}}],["src/favorite/entities/favorite.entity.ts:4",{"_index":366,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:5",{"_index":368,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:6",{"_index":364,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:7",{"_index":367,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:8",{"_index":369,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/entities/favorite.entity.ts:9",{"_index":365,"title":{},"body":{"classes/Favorite.html":{}}}],["src/favorite/favorite.controller.ts",{"_index":372,"title":{},"body":{"controllers/FavoriteController.html":{},"coverage.html":{}}}],["src/favorite/favorite.controller.ts:18",{"_index":378,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["src/favorite/favorite.controller.ts:26",{"_index":388,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["src/favorite/favorite.controller.ts:35",{"_index":385,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["src/favorite/favorite.module.ts",{"_index":407,"title":{},"body":{"modules/FavoriteModule.html":{}}}],["src/favorite/favorite.service.ts",{"_index":409,"title":{},"body":{"injectables/FavoriteService.html":{},"coverage.html":{}}}],["src/favorite/favorite.service.ts:12",{"_index":413,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:51",{"_index":416,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:55",{"_index":418,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:65",{"_index":415,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/favorite/favorite.service.ts:9",{"_index":411,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["src/game/dto/create.game.dto.ts",{"_index":249,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["src/game/dto/create.game.dto.ts:11",{"_index":281,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:19",{"_index":258,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:26",{"_index":265,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:33",{"_index":291,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:40",{"_index":280,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:47",{"_index":271,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:54",{"_index":295,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:62",{"_index":276,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:69",{"_index":297,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:76",{"_index":274,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:84",{"_index":275,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/create.game.dto.ts:92",{"_index":283,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["src/game/dto/update.game.dto.ts",{"_index":718,"title":{},"body":{"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["src/game/entities/game.entity",{"_index":528,"title":{},"body":{"classes/Genero.html":{},"injectables/HomepageService.html":{},"classes/Perfil.html":{}}}],["src/game/entities/game.entity.ts",{"_index":442,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:10",{"_index":451,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:11",{"_index":445,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:12",{"_index":455,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:13",{"_index":450,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:14",{"_index":456,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:15",{"_index":446,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:16",{"_index":448,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:17",{"_index":453,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:5",{"_index":449,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:6",{"_index":452,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:7",{"_index":443,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:8",{"_index":444,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:9",{"_index":454,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":460,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:21",{"_index":466,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:29",{"_index":469,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:37",{"_index":464,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:45",{"_index":474,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:54",{"_index":465,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":493,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":495,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:10",{"_index":496,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:13",{"_index":498,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:19",{"_index":502,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:37",{"_index":499,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:41",{"_index":500,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:51",{"_index":501,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:81",{"_index":497,"title":{},"body":{"injectables/GameService.html":{}}}],["src/generos/dto/create.genero.dto.ts",{"_index":300,"title":{},"body":{"classes/CreateGeneroDto.html":{},"coverage.html":{}}}],["src/generos/dto/create.genero.dto.ts:11",{"_index":310,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["src/generos/dto/create.genero.dto.ts:19",{"_index":306,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["src/generos/dto/update.genero.dto.ts",{"_index":723,"title":{},"body":{"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["src/generos/entities/genero.entity",{"_index":457,"title":{},"body":{"classes/Game.html":{}}}],["src/generos/entities/genero.entity.ts",{"_index":524,"title":{},"body":{"classes/Genero.html":{},"coverage.html":{}}}],["src/generos/entities/genero.entity.ts:4",{"_index":526,"title":{},"body":{"classes/Genero.html":{}}}],["src/generos/entities/genero.entity.ts:5",{"_index":527,"title":{},"body":{"classes/Genero.html":{}}}],["src/generos/entities/genero.entity.ts:6",{"_index":525,"title":{},"body":{"classes/Genero.html":{}}}],["src/generos/generos.controller.ts",{"_index":530,"title":{},"body":{"controllers/GenerosController.html":{},"coverage.html":{}}}],["src/generos/generos.controller.ts:21",{"_index":533,"title":{},"body":{"controllers/GenerosController.html":{}}}],["src/generos/generos.controller.ts:29",{"_index":534,"title":{},"body":{"controllers/GenerosController.html":{}}}],["src/generos/generos.controller.ts:37",{"_index":531,"title":{},"body":{"controllers/GenerosController.html":{}}}],["src/generos/generos.controller.ts:45",{"_index":536,"title":{},"body":{"controllers/GenerosController.html":{}}}],["src/generos/generos.controller.ts:54",{"_index":532,"title":{},"body":{"controllers/GenerosController.html":{}}}],["src/generos/generos.module.ts",{"_index":552,"title":{},"body":{"modules/GenerosModule.html":{}}}],["src/generos/generos.service.ts",{"_index":554,"title":{},"body":{"injectables/GenerosService.html":{},"coverage.html":{}}}],["src/generos/generos.service.ts:10",{"_index":555,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/generos/generos.service.ts:13",{"_index":557,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/generos/generos.service.ts:19",{"_index":561,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/generos/generos.service.ts:28",{"_index":558,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/generos/generos.service.ts:32",{"_index":559,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/generos/generos.service.ts:42",{"_index":560,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/generos/generos.service.ts:46",{"_index":556,"title":{},"body":{"injectables/GenerosService.html":{}}}],["src/homepage/homepage.controller.ts",{"_index":570,"title":{},"body":{"controllers/HomepageController.html":{},"coverage.html":{}}}],["src/homepage/homepage.controller.ts:18",{"_index":576,"title":{},"body":{"controllers/HomepageController.html":{}}}],["src/homepage/homepage.controller.ts:26",{"_index":579,"title":{},"body":{"controllers/HomepageController.html":{}}}],["src/homepage/homepage.controller.ts:34",{"_index":583,"title":{},"body":{"controllers/HomepageController.html":{}}}],["src/homepage/homepage.module.ts",{"_index":602,"title":{},"body":{"modules/HomepageModule.html":{}}}],["src/homepage/homepage.service.ts",{"_index":604,"title":{},"body":{"injectables/HomepageService.html":{},"coverage.html":{}}}],["src/homepage/homepage.service.ts:23",{"_index":607,"title":{},"body":{"injectables/HomepageService.html":{}}}],["src/homepage/homepage.service.ts:37",{"_index":608,"title":{},"body":{"injectables/HomepageService.html":{}}}],["src/homepage/homepage.service.ts:6",{"_index":605,"title":{},"body":{"injectables/HomepageService.html":{}}}],["src/homepage/homepage.service.ts:9",{"_index":606,"title":{},"body":{"injectables/HomepageService.html":{}}}],["src/main.ts",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/perfil/dto/create",{"_index":312,"title":{},"body":{"classes/CreatePerfilDto.html":{},"coverage.html":{}}}],["src/perfil/dto/update",{"_index":726,"title":{},"body":{"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["src/perfil/entities/perfil.entity",{"_index":458,"title":{},"body":{"classes/Game.html":{}}}],["src/perfil/entities/perfil.entity.ts",{"_index":644,"title":{},"body":{"classes/Perfil.html":{},"coverage.html":{}}}],["src/perfil/entities/perfil.entity.ts:5",{"_index":647,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:6",{"_index":648,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:7",{"_index":649,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:8",{"_index":646,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:9",{"_index":645,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/perfil.controller.ts",{"_index":651,"title":{},"body":{"controllers/PerfilController.html":{},"coverage.html":{}}}],["src/perfil/perfil.controller.ts:21",{"_index":656,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:29",{"_index":653,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:37",{"_index":658,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:46",{"_index":654,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.module.ts",{"_index":674,"title":{},"body":{"modules/PerfilModule.html":{}}}],["src/perfil/perfil.service.ts",{"_index":676,"title":{},"body":{"injectables/PerfilService.html":{},"coverage.html":{}}}],["src/perfil/perfil.service.ts:10",{"_index":677,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:13",{"_index":681,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:17",{"_index":684,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:27",{"_index":683,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:33",{"_index":679,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/prisma/prisma.module",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":698,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":701,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":707,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":709,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/user/dto/create",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":729,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":732,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":736,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":739,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":735,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":740,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":734,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":738,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":742,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":749,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":750,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":751,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":747,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":765,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":767,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:16",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":773,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:66",{"_index":774,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:92",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle.error.utils",{"_index":422,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["src/utils/handle.error.utils.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":877,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":880,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":882,"title":{},"body":{"index.html":{}}}],["started",{"_index":859,"title":{"index.html":{}},"body":{}}],["starter",{"_index":870,"title":{},"body":{"index.html":{}}}],["statements",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["stay",{"_index":903,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":619,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["stream",{"_index":244,"title":{},"body":{"classes/CreateFavoriteDto.html":{}}}],["string",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["studio",{"_index":270,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["summary",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":623,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":895,"title":{},"body":{"index.html":{},"modules.html":{}}}],["survivalcraft",{"_index":309,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["svg",{"_index":914,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["são",{"_index":303,"title":{},"body":{"classes/CreateGeneroDto.html":{},"injectables/UserService.html":{}}}],["table",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["tem",{"_index":282,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["test",{"_index":885,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":888,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":887,"title":{},"body":{"index.html":{}}}],["tests",{"_index":884,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":893,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":711,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":712,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.favoriteservice.create(dto",{"_index":398,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["this.favoriteservice.delete(id",{"_index":403,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["this.favoriteservice.findall",{"_index":399,"title":{},"body":{"controllers/FavoriteController.html":{}}}],["this.findbyid(id",{"_index":440,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/UserService.html":{}}}],["this.gameservice.create(dto",{"_index":485,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.delete(id",{"_index":489,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findall",{"_index":481,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findone(id",{"_index":484,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.update(id",{"_index":488,"title":{},"body":{"controllers/GameController.html":{}}}],["this.generoservice.create(dto",{"_index":546,"title":{},"body":{"controllers/GenerosController.html":{}}}],["this.generoservice.delete(id",{"_index":548,"title":{},"body":{"controllers/GenerosController.html":{}}}],["this.generoservice.findall",{"_index":544,"title":{},"body":{"controllers/GenerosController.html":{}}}],["this.generoservice.findone(id",{"_index":545,"title":{},"body":{"controllers/GenerosController.html":{}}}],["this.generoservice.update(id",{"_index":547,"title":{},"body":{"controllers/GenerosController.html":{}}}],["this.homepageservice.findall(perfilid",{"_index":591,"title":{},"body":{"controllers/HomepageController.html":{}}}],["this.homepageservice.findfavorites(perfilid",{"_index":594,"title":{},"body":{"controllers/HomepageController.html":{}}}],["this.homepageservice.findgamesbygenre(genero",{"_index":598,"title":{},"body":{"controllers/HomepageController.html":{}}}],["this.jwtservice.sign",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.perfilservice.create(user.id",{"_index":668,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.delete(id",{"_index":670,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.findall(user.id",{"_index":666,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.update(id",{"_index":669,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.prisma.favorite.create",{"_index":431,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.prisma.favorite.delete",{"_index":441,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.prisma.favorite.findmany",{"_index":434,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/HomepageService.html":{}}}],["this.prisma.favorite.findunique",{"_index":436,"title":{},"body":{"injectables/FavoriteService.html":{}}}],["this.prisma.game.create",{"_index":523,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.delete",{"_index":504,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findmany",{"_index":516,"title":{},"body":{"injectables/GameService.html":{},"injectables/HomepageService.html":{}}}],["this.prisma.game.findunique",{"_index":517,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.update",{"_index":505,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.genero.create",{"_index":568,"title":{},"body":{"injectables/GenerosService.html":{}}}],["this.prisma.genero.delete",{"_index":563,"title":{},"body":{"injectables/GenerosService.html":{}}}],["this.prisma.genero.findmany",{"_index":565,"title":{},"body":{"injectables/GenerosService.html":{}}}],["this.prisma.genero.findunique",{"_index":566,"title":{},"body":{"injectables/GenerosService.html":{}}}],["this.prisma.genero.update",{"_index":564,"title":{},"body":{"injectables/GenerosService.html":{}}}],["this.prisma.perfil.create",{"_index":694,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.delete({where",{"_index":686,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.findmany",{"_index":690,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.update",{"_index":687,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.user",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete({where",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":782,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.userselect",{"_index":783,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":756,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":758,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(id",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["title",{"_index":316,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{}}}],["todos",{"_index":387,"title":{},"body":{"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":640,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["touch",{"_index":904,"title":{},"body":{"index.html":{}}}],["trailer",{"_index":257,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{}}}],["transformer",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":247,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["true})@apiproperty({description",{"_index":199,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["twitter",{"_index":910,"title":{},"body":{"index.html":{}}}],["type",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Favorite.html":{},"controllers/FavoriteController.html":{},"injectables/FavoriteService.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/HomepageController.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":720,"title":{},"body":{"classes/UpdateGameDto.html":{},"classes/UpdateGeneroDto.html":{},"dependencies.html":{}}}],["types/axios",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":869,"title":{},"body":{"index.html":{}}}],["ui",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["unauthorizedexception",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":883,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":414,"title":{},"body":{"injectables/FavoriteService.html":{},"injectables/GameService.html":{},"injectables/GenerosService.html":{},"injectables/HomepageService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{}}}],["unlicensed",{"_index":922,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["update",{"_index":462,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":487,"title":{},"body":{"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":470,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatefavoritedto",{"_index":714,"title":{"classes/UpdateFavoriteDto.html":{}},"body":{"classes/UpdateFavoriteDto.html":{},"coverage.html":{}}}],["updategamedto",{"_index":471,"title":{"classes/UpdateGameDto.html":{}},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGameDto.html":{},"coverage.html":{}}}],["updategenerodto",{"_index":535,"title":{"classes/UpdateGeneroDto.html":{}},"body":{"controllers/GenerosController.html":{},"injectables/GenerosService.html":{},"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["updateperfildto",{"_index":657,"title":{"classes/UpdatePerfilDto.html":{}},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":728,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["useguards",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FavoriteController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/HomepageController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":102,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":766,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":730,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:19",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":753,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":741,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":680,"title":{},"body":{"injectables/PerfilService.html":{}}}],["usermodule",{"_index":51,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userselect",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":752,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":757,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":748,"title":{},"body":{"controllers/UserController.html":{}}}],["validate",{"_index":611,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":613,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":242,"title":{},"body":{"classes/CreateFavoriteDto.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":777,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":923,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":920,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/GenerosController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":878,"title":{},"body":{"index.html":{}}}],["website",{"_index":908,"title":{},"body":{"index.html":{}}}],["world",{"_index":308,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["xbox",{"_index":289,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["xx",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["xxx.xxx.xxx",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["you'd",{"_index":898,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":272,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["z",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FavoriteModule.html":{},"modules/GameModule.html":{},"modules/GenerosModule.html":{},"modules/HomepageModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFavoriteModule\n\nFavoriteModule\n\nAppModule -->\n\nFavoriteModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenerosModule\n\nGenerosModule\n\nAppModule -->\n\nGenerosModule->AppModule\n\n\n\n\n\nHomepageModule\n\nHomepageModule\n\nAppModule -->\n\nHomepageModule->AppModule\n\n\n\n\n\nPerfilModule\n\nPerfilModule\n\nAppModule -->\n\nPerfilModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FavoriteModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            GenerosModule\n                        \n                        \n                            HomepageModule\n                        \n                        \n                            PerfilModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { GameModule } from './game/game.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { GenerosModule } from './generos/generos.module';\nimport { UserModule } from './user/user.module';\nimport { PerfilModule } from './perfil/perfil.module';\nimport { AuthModule } from './auth/auth.module';\nimport { FavoriteModule } from './favorite/favorite.module';\nimport { HomepageModule } from './homepage/homepage.module';\n\n@Module({\n  imports: [GameModule, GenerosModule, UserModule, PerfilModule, AuthModule, FavoriteModule, HomepageModule],\n  controllers: [AppController],\n  providers: [AppService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(): string {\n    return 'Server is running \\n Please check http://localhost:3333/api for Swagger docs';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './loggedUser.decorator';\n\n@Controller('auth')\n@ApiTags('Auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  profile(@LoggedUser()user: User) {\n    return user;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor (\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService\n    ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { name, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { name } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ name }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFavoriteDto.html":{"url":"classes/CreateFavoriteDto.html","title":"class - CreateFavoriteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFavoriteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/dto/create-favorite.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capa\n                            \n                            \n                                game\n                            \n                            \n                                imdbscore\n                            \n                            \n                                nome\n                            \n                            \n                                perfis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capa\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'A foto da capa do jogo', example: 'https://cdn.cloudflare.steamstatic.com/steam/apps/794260/header.jpg?t=1652856127'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'ID do jogo favoritado', example: '04f66779-bcfa-4c5c-a140-f234138890f3'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdbscore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive()@Max(5)@ApiProperty({description: 'Nota do jogo na IMBD de 1 a 5 estrelas', example: '5'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'O nome do jogo', example: 'Outward: Definitive Edition'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perfis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos perfis que favoritaram o jogo', example: '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/favorite/dto/create-favorite.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsPositive, IsString, IsUrl, IsUUID, Max } from \"class-validator\";\nimport internal from \"stream\";\n\nexport class CreateFavoriteDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'O nome do jogo',\n    example: 'Outward: Definitive Edition',\n  })\n  nome: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'A foto da capa do jogo',\n    example:\n      'https://cdn.cloudflare.steamstatic.com/steam/apps/794260/header.jpg?t=1652856127',\n  })\n  capa: string;\n\n  @IsPositive()\n  @Max(5)\n  @ApiProperty({\n    description: 'Nota do jogo na IMBD de 1 a 5 estrelas',\n    example: '5',\n  })\n  imdbscore: number;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos perfis que favoritaram o jogo',\n    example:\n      '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]',\n  })\n  perfis: string[];\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'ID do jogo favoritado',\n    example:\n      '04f66779-bcfa-4c5c-a140-f234138890f3',\n  })\n  game: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameDto.html":{"url":"classes/CreateGameDto.html","title":"class - CreateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/create.game.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capa\n                            \n                            \n                                descricao\n                            \n                            \n                                developer\n                            \n                            \n                                gameplay\n                            \n                            \n                                generos\n                            \n                            \n                                imdbscore\n                            \n                            \n                                lancamento\n                            \n                            \n                                nome\n                            \n                            \n                                perfis\n                            \n                            \n                                plataformas\n                            \n                            \n                                publisher\n                            \n                            \n                                trailer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capa\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'A foto da capa do jogo', example: 'https://cdn.cloudflare.steamstatic.com/steam/apps/794260/header.jpg?t=1652856127'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do jogo', example: 'Jogo de RPG, Ação e Aventura'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        developer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome da empresa desenvolvedora', example: 'Nine Dots Studio'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Gameplay do jogo no Youtube', example: 'https://www.youtube.com/watch?v=7krjWYPsMNc'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos generos do jogo', example: '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdbscore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPositive()@Max(5)@ApiProperty({description: 'Nota do jogo na IMBD de 1 a 5 estrelas', example: '5'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lancamento\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Data de lançamento do jogo', example: '17/05/2022'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'O nome do jogo', example: 'Outward: Definitive Edition'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perfis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos perfis que tem o jogo', example: '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plataformas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Para quais plataformas o jogo foi lançado', example: 'PC, Xbox, Playstation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome da empresa publicadora', example: 'Prime Matter'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trailer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Trailer do jogo no Youtube', example: 'https://www.youtube.com/watch?v=gy6bya_YIkw'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create.game.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsNotEmpty, IsPositive, IsString, IsUrl, IsUUID, Max } from 'class-validator';\n\nexport class CreateGameDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'O nome do jogo',\n    example: 'Outward: Definitive Edition',\n  })\n  nome: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'A foto da capa do jogo',\n    example:\n      'https://cdn.cloudflare.steamstatic.com/steam/apps/794260/header.jpg?t=1652856127',\n  })\n  capa: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do jogo',\n    example: 'Jogo de RPG, Ação e Aventura',\n  })\n  descricao: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Para quais plataformas o jogo foi lançado',\n    example: 'PC, Xbox, Playstation',\n  })\n  plataformas: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Data de lançamento do jogo',\n    example: '17/05/2022',\n  })\n  lancamento: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome da empresa desenvolvedora',\n    example: 'Nine Dots Studio',\n  })\n  developer: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome da empresa publicadora',\n    example: 'Prime Matter',\n  })\n  publisher: string;\n\n  @IsPositive()\n  @Max(5)\n  @ApiProperty({\n    description: 'Nota do jogo na IMBD de 1 a 5 estrelas',\n    example: '5',\n  })\n  imdbscore: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Trailer do jogo no Youtube',\n    example: 'https://www.youtube.com/watch?v=gy6bya_YIkw',\n  })\n  trailer: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Gameplay do jogo no Youtube',\n    example: 'https://www.youtube.com/watch?v=7krjWYPsMNc',\n  })\n  gameplay: string;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos generos do jogo',\n    example:\n      '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]',\n  })\n  generos: string[];\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos perfis que tem o jogo',\n    example:\n      '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]',\n  })\n  perfis: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneroDto.html":{"url":"classes/CreateGeneroDto.html","title":"class - CreateGeneroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generos/dto/create.genero.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                games\n                            \n                            \n                                nome\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos jogos que são desse gênero', example: '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generos/dto/create.genero.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nome do gênero', example: 'Open world survivalcraft'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/generos/dto/create.genero.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsUUID } from 'class-validator';\n\nexport class CreateGeneroDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome do gênero',\n    example: 'Open world survivalcraft',\n  })\n  nome: string;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos jogos que são desse gênero',\n    example:\n      '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]',\n  })\n  games: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePerfilDto.html":{"url":"classes/CreatePerfilDto.html","title":"class - CreatePerfilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePerfilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/dto/create-perfil.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favorites\n                            \n                            \n                                games\n                            \n                            \n                                imageURL\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        favorites\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos favoritos', example: '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos jogos que estão no perfil', example: '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'O endereço da imagem de perfil', example: 'http://imagemdeperfil.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'O nome do perfil', example: 'Fulano123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsString, IsUrl, IsUUID } from \"class-validator\";\n\nexport class CreatePerfilDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'O nome do perfil',\n    example: 'Fulano123',\n  })\n  title: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'O endereço da imagem de perfil',\n    example: 'http://imagemdeperfil.com',\n  })\n  imageURL: string;\n\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos jogos que estão no perfil',\n    example:\n      '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]',\n  })\n  games: string[];\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos favoritos',\n    example:\n      '[\"04f66779-bcfa-4c5c-a140-f234138890f3\", \"adb96fd7-cdcf-43dc-9e1b-0c0a262111f9\"]',\n  })\n  favorites: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'A confirmação da senha deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Número do CPF', example: 'xxx.xxx.xxx-xx'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Email do usuário', example: 'fulano@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'O nome de usuário', example: 'Hilton'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBIC,\n  IsBoolean,\n  IsNotEmpty,\n  IsString,\n  IsUrl,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'O nome de usuário',\n    example: 'Hilton',\n  })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'fulano@gmail.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Número do CPF',\n    example: 'xxx.xxx.xxx-xx',\n  })\n  cpf: string;\n\n  @IsString()\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'A confirmação da senha deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Favorite.html":{"url":"classes/Favorite.html","title":"class - Favorite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Favorite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/entities/favorite.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capa\n                            \n                            \n                                    Optional\n                                game\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imdbscore\n                            \n                            \n                                nome\n                            \n                            \n                                    Optional\n                                perfis\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capa\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdbscore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        perfis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/favorite/entities/favorite.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Game } from \"@prisma/client\";\n\nexport class Favorite {\n  id?: string;\n  nome: string;\n  capa: string;\n  imdbscore: number;\n  perfis?: string[];\n  game?: Game;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FavoriteController.html":{"url":"controllers/FavoriteController.html","title":"controller - FavoriteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FavoriteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/favorite.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                favorite\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateFavoriteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Favoritar um jogo'})\n                \n            \n\n            \n                \n                    Defined in src/favorite/favorite.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateFavoriteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um favorito pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/favorite/favorite.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os favoritos'})\n                \n            \n\n            \n                \n                    Defined in src/favorite/favorite.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, HttpCode, HttpStatus } from '@nestjs/common';\nimport { FavoriteService } from './favorite.service';\nimport { CreateFavoriteDto } from './dto/create-favorite.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Favorites')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('favorite')\nexport class FavoriteController {\n  constructor(private readonly favoriteService: FavoriteService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Favoritar um jogo',\n  })\n  create(@Body() dto: CreateFavoriteDto) {\n    return this.favoriteService.create(dto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os favoritos',\n  })\n  findAll() {\n    return this.favoriteService.findAll();\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um favorito pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.favoriteService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FavoriteModule.html":{"url":"modules/FavoriteModule.html","title":"module - FavoriteModule","body":"\n                   \n\n\n\n\n    Modules\n    FavoriteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FavoriteModule\n\n\n\ncluster_FavoriteModule_imports\n\n\n\ncluster_FavoriteModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nFavoriteModule\n\nFavoriteModule\n\nFavoriteModule -->\n\nPrismaModule->FavoriteModule\n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nFavoriteModule -->\n\nFavoriteService->FavoriteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/favorite/favorite.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FavoriteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FavoriteController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FavoriteService } from './favorite.service';\nimport { FavoriteController } from './favorite.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [FavoriteController],\n  providers: [FavoriteService]\n})\nexport class FavoriteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FavoriteService.html":{"url":"injectables/FavoriteService.html","title":"injectable - FavoriteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FavoriteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/favorite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/favorite/favorite.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createFavoriteDto: CreateFavoriteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFavoriteDto\n                                    \n                                                CreateFavoriteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/favorite/favorite.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { Favorite } from './entities/favorite.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle.error.utils';\nimport { CreateFavoriteDto } from './dto/create-favorite.dto';\n\n@Injectable()\nexport class FavoriteService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(createFavoriteDto: CreateFavoriteDto) {\n    const data: Prisma.FavoriteCreateInput ={\n      nome: createFavoriteDto.nome,\n      capa: createFavoriteDto.capa,\n      imdbscore: createFavoriteDto.imdbscore,\n      game: {\n        connect: {\n          id: createFavoriteDto.game,\n        },\n      },\n      perfis: {\n        connect: createFavoriteDto.perfis.map((perfilId) => ({\n          id: perfilId,\n        })),\n      },\n    }\n\n    return await this.prisma.favorite.create({\n      data, select: {\n        nome: true,\n        capa: true,\n        imdbscore: true,\n        game: {\n          select:{\n            id: true,\n          },\n        },\n        perfis: {\n          select: {\n            id: true,\n          },\n        },\n      },\n    }).catch(handleError);\n  };\n\n\n\n\n  async findAll(): Promise {\n    return await this.prisma.favorite.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.favorite.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.favorite.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capa\n                            \n                            \n                                descricao\n                            \n                            \n                                developer\n                            \n                            \n                                gameplay\n                            \n                            \n                                    Optional\n                                generos\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imdbscore\n                            \n                            \n                                lancamento\n                            \n                            \n                                nome\n                            \n                            \n                                    Optional\n                                perfis\n                            \n                            \n                                plataformas\n                            \n                            \n                                publisher\n                            \n                            \n                                trailer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capa\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        descricao\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        developer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        generos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genero[]\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imdbscore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lancamento\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        perfis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Perfil[]\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        plataformas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trailer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/game.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Genero } from \"src/generos/entities/genero.entity\";\nimport { Perfil } from \"src/perfil/entities/perfil.entity\";\n\nexport class Game {\n  id?: string;\n  nome: string;\n  capa: string;\n  descricao: string;\n  plataformas: string;\n  lancamento: string;\n  developer: string;\n  publisher: string;\n  imdbscore: number;\n  trailer: string;\n  gameplay: string;\n  generos?: Genero[];\n  perfis?: Perfil[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cadastrar um jogo'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os jogos'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um jogo'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um jogo pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ApiBearerAuth, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { Game } from \"@prisma/client\";\nimport { CreateGameDto } from \"./dto/create.game.dto\";\nimport { UpdateGameDto } from \"./dto/update.game.dto\";\nimport { GameService } from \"./game.service\";\n\n\n@ApiTags('Game')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('game')\nexport class GameController {\n  constructor(private readonly gameService: GameService){}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os jogos',\n  })\n  findAll() {\n    return this.gameService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um jogo',\n  })\n  findOne(@Param('id') id: string) {\n    return this.gameService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cadastrar um jogo',\n  })\n  create(@Body() dto: CreateGameDto) {\n    return this.gameService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um jogo pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateGameDto): Promise {\n    return this.gameService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um jogo pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.gameService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { GameController } from \"./game.controller\";\nimport { GameService } from \"./game.service\";\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateGameDto } from './dto/create.game.dto';\nimport { Game } from './entities/game.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateGameDto } from './dto/update.game.dto';\nimport { handleError } from 'src/utils/handle.error.utils';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class GameService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.game.delete({ where: { id } });\n  }\n\nasync update(id: string, dto: UpdateGameDto) {\n  return await this.prisma.game.update({\n    where: { id },\n    data: {\n      nome: dto.nome,\n      capa: dto.capa,\n      descricao: dto.descricao,\n      plataformas: dto.plataformas,\n      lancamento: dto.lancamento,\n      developer: dto.developer,\n      publisher: dto.publisher,\n      imdbscore: dto.imdbscore,\n      trailer: dto.trailer,\n      gameplay: dto.gameplay,\n    }\n  })\n  }\n\n  async findAll(): Promise {\n    return await this.prisma.game.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.game.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string) {\n    const data = await this.prisma.game.findUnique({\n      where: { id },\n      select: {\n        nome: true,\n        capa: true,\n        descricao: true,\n        plataformas: true,\n        lancamento: true,\n        developer: true,\n        publisher: true,\n        imdbscore: true,\n        trailer: true,\n        gameplay: true,\n        generos: {\n          select: {\n            nome: true,\n          },\n        },\n      }\n\n    });\n\n    if (!data) {\n      throw new NotFoundException('Jogo não encontrado');\n    } else {\n      return data;\n    }\n  }\n\n  async create(dto: CreateGameDto) {\n    const data: Prisma.GameCreateInput = {\n      nome: dto.nome,\n      capa: dto.capa,\n      descricao: dto.descricao,\n      plataformas: dto.plataformas,\n      lancamento: dto.lancamento,\n      developer: dto.developer,\n      publisher: dto.publisher,\n      imdbscore: dto.imdbscore,\n      trailer: dto.trailer,\n      gameplay: dto.gameplay,\n      generos: {\n        connect: dto.generos.map((generoNome) => ({\n          nome: generoNome,\n        })),\n      },\n      perfis: {\n        connect: dto.perfis.map((perfilId) => ({\n          id: perfilId,\n        })),\n      },\n    };\n\n    return await this.prisma.game.create({\n      data, select: {\n        nome: true,\n        capa: true,\n        descricao: true,\n        plataformas: true,\n        lancamento: true,\n        developer: true,\n        publisher: true,\n        imdbscore: true,\n        trailer: true,\n        gameplay: true,\n        generos: {\n          select: {\n            nome: true,\n          },\n        },\n        perfis: {\n          select: {\n            id: true,\n          }\n        }\n      }\n    }).catch(handleError);\n  };\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Genero.html":{"url":"classes/Genero.html","title":"class - Genero","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Genero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generos/entities/genero.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                games\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                nome\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                    \n                        \n                                Defined in src/generos/entities/genero.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/generos/entities/genero.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nome\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/generos/entities/genero.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Game } from \"src/game/entities/game.entity\";\n\nexport class Genero {\n  id?: string;\n  nome: string;\n  games?: Game[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GenerosController.html":{"url":"controllers/GenerosController.html","title":"controller - GenerosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GenerosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generos/generos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                genero\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateGeneroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cadastrar um genero'})\n                \n            \n\n            \n                \n                    Defined in src/generos/generos.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um genero pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/generos/generos.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os generos'})\n                \n            \n\n            \n                \n                    Defined in src/generos/generos.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um genero'})\n                \n            \n\n            \n                \n                    Defined in src/generos/generos.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateGeneroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um genero pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/generos/generos.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpCode, HttpStatus, Param, Patch, Post, UseGuards } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { ApiBearerAuth, ApiOperation, ApiTags } from \"@nestjs/swagger\";\nimport { Genero } from \"@prisma/client\";\nimport { CreateGeneroDto } from \"./dto/create.genero.dto\";\nimport { UpdateGeneroDto } from \"./dto/update.genero.dto\";\nimport { GenerosService } from \"./generos.service\";\n\n\n@ApiTags('Genero')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('genero')\nexport class GenerosController {\n  constructor(private readonly generoService: GenerosService){}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os generos',\n  })\n  findAll() {\n    return this.generoService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um genero',\n  })\n  findOne(@Param('id') id: string) {\n    return this.generoService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cadastrar um genero',\n  })\n  create(@Body() dto: CreateGeneroDto) {\n    return this.generoService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um genero pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateGeneroDto): Promise {\n    return this.generoService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um genero pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.generoService.delete(id);\n  }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GenerosModule.html":{"url":"modules/GenerosModule.html","title":"module - GenerosModule","body":"\n                   \n\n\n\n\n    Modules\n    GenerosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GenerosModule\n\n\n\ncluster_GenerosModule_providers\n\n\n\ncluster_GenerosModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGenerosModule\n\nGenerosModule\n\nGenerosModule -->\n\nPrismaModule->GenerosModule\n\n\n\n\n\nGenerosService\n\nGenerosService\n\nGenerosModule -->\n\nGenerosService->GenerosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/generos/generos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GenerosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GenerosController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { GenerosController } from \"./generos.controller\";\nimport { GenerosService } from \"./generos.service\";\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from \"@nestjs/passport\";\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [GenerosController],\n  providers: [GenerosService],\n})\nexport class GenerosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerosService.html":{"url":"injectables/GenerosService.html","title":"injectable - GenerosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generos/generos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/generos/generos.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateGeneroDto)\n                \n            \n\n\n            \n                \n                    Defined in src/generos/generos.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/generos/generos.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/generos/generos.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/generos/generos.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/generos/generos.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateGeneroDto)\n                \n            \n\n\n            \n                \n                    Defined in src/generos/generos.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateGeneroDto } from './dto/create.genero.dto';\nimport { Genero } from './entities/genero.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateGeneroDto } from './dto/update.genero.dto';\nimport { handleError } from 'src/utils/handle.error.utils';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class GenerosService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.genero.delete({ where: { id } });\n  }\n\nasync update(id: string, dto: UpdateGeneroDto) {\n    return await this.prisma.genero.update({\n      where: { id },\n      data: {\n        nome: dto.nome,\n      }\n    })\n  }\n\n  async findAll(): Promise {\n    return await this.prisma.genero.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.genero.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return await this.findById(id);\n  }\n\n  async create(dto: CreateGeneroDto) {\n    const data: Prisma.GeneroCreateInput = {\n      nome: dto.nome,\n    };\n\n    return await this.prisma.genero.create({\n      data, select: {\n        nome: true,\n      },\n    }).catch(handleError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HomepageController.html":{"url":"controllers/HomepageController.html","title":"controller - HomepageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HomepageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/homepage/homepage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                homepage\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findFavorites\n                            \n                            \n                                findGamesByGenre\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(perfilId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('jogos/:id')@ApiOperation({summary: 'Listar os jogos do perfil'})\n                \n            \n\n            \n                \n                    Defined in src/homepage/homepage.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    perfilId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findFavorites\n                        \n                    \n                \n            \n            \n                \nfindFavorites(perfilId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('favoritos/:id')@ApiOperation({summary: 'Listar os jogos favoritos do perfil'})\n                \n            \n\n            \n                \n                    Defined in src/homepage/homepage.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    perfilId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findGamesByGenre\n                        \n                    \n                \n            \n            \n                \nfindGamesByGenre(genero: string, perfilId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('genero/:id')@ApiOperation({summary: 'Listar os jogos por gênero'})\n                \n            \n\n            \n                \n                    Defined in src/homepage/homepage.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genero\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    perfilId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/loggedUser.decorator';\nimport { HomepageService } from './homepage.service';\n\n@ApiTags('Homepage')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('homepage')\nexport class HomepageController {\n  constructor(private readonly homepageService: HomepageService) {}\n\n  @Get('jogos/:id')\n  @ApiOperation({\n    summary: 'Listar os jogos do perfil',\n  })\n  findAll(@Param('id') perfilId: string) {\n    return this.homepageService.findAll(perfilId);\n  }\n\n  @Get('favoritos/:id')\n  @ApiOperation({\n    summary: 'Listar os jogos favoritos do perfil',\n  })\n  findFavorites(@Param('id') perfilId: string) {\n    return this.homepageService.findFavorites(perfilId);\n  }\n\n  @Get('genero/:id')\n  @ApiOperation({\n    summary: 'Listar os jogos por gênero',\n  })\n  findGamesByGenre(@Param('genero') genero: string, @Param('perfilId') perfilId: string) {\n    return this.homepageService.findGamesByGenre(genero, perfilId);\n  }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomepageModule.html":{"url":"modules/HomepageModule.html","title":"module - HomepageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomepageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomepageModule\n\n\n\ncluster_HomepageModule_providers\n\n\n\ncluster_HomepageModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nHomepageModule\n\nHomepageModule\n\nHomepageModule -->\n\nPrismaModule->HomepageModule\n\n\n\n\n\nHomepageService\n\nHomepageService\n\nHomepageModule -->\n\nHomepageService->HomepageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/homepage/homepage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HomepageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HomepageController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HomepageService } from './homepage.service';\nimport { HomepageController } from './homepage.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [HomepageController],\n  providers: [HomepageService]\n})\nexport class HomepageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HomepageService.html":{"url":"injectables/HomepageService.html","title":"injectable - HomepageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HomepageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/homepage/homepage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findFavorites\n                            \n                            \n                                    Async\n                                findGamesByGenre\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/homepage/homepage.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(perfilId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/homepage/homepage.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    perfilId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findFavorites\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFavorites(perfilId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/homepage/homepage.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    perfilId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findGamesByGenre\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGamesByGenre(genero: string, perfilId)\n                \n            \n\n\n            \n                \n                    Defined in src/homepage/homepage.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genero\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    perfilId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Game } from 'src/game/entities/game.entity';\n\n@Injectable()\nexport class HomepageService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findAll(perfilId: string) {\n    const games = await this.prisma.game.findMany({\n      where: {\n        perfis: {\n          every: {\n            id:perfilId,\n          },\n        },\n      },\n    });\n\n    return games;\n  };\n\n  async findFavorites(perfilId: string) {\n    const favoritos = await this.prisma.favorite.findMany({\n      where: {\n        perfis: {\n          every: {\n            id: perfilId,\n          },\n        },\n      },\n    });\n\n    return favoritos;\n  };\n\n  async findGamesByGenre(genero: string, perfilId) {\n    const games = await this.prisma.game.findMany({\n      where: {\n        perfis: {\n          every: {\n            id:perfilId,\n          },\n        },\n      },\n      select: {\n        id: true,\n        nome: true,\n        capa: true,\n        imdbscore: true,\n        generos: true,\n      },\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { prisma } from '@prisma/client';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { name: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { name: payload.name },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'Hilton'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'Hilton',\n  })\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Perfil.html":{"url":"classes/Perfil.html","title":"class - Perfil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Perfil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/entities/perfil.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                favorites\n                            \n                            \n                                    Optional\n                                games\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                title\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        favorites\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Favorite[]\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Favorite, User } from \"@prisma/client\";\nimport { Game } from \"src/game/entities/game.entity\";\n\nexport class Perfil {\n  id?: string;\n  title: string;\n  user: User;\n  games?: Game[]\n  favorites?: Favorite[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PerfilController.html":{"url":"controllers/PerfilController.html","title":"controller - PerfilController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PerfilController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/perfil.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                perfil\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, dto: CreatePerfilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cadastrar um perfil'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os perfis do usuário'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdatePerfilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um perfil pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { PerfilService } from './perfil.service';\nimport { CreatePerfilDto } from './dto/create-perfil.dto';\nimport { UpdatePerfilDto } from './dto/update-perfil.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/loggedUser.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n@ApiTags('Perfil')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('perfil')\nexport class PerfilController {\n  constructor(private readonly perfilService: PerfilService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os perfis do usuário',\n  })\n  findAll(@LoggedUser()user: User) {\n    return this.perfilService.findAll(user.id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cadastrar um perfil',\n  })\n  create(@LoggedUser()user: User, @Body() dto: CreatePerfilDto) {\n    return this.perfilService.create(user.id, dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um perfil pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdatePerfilDto) {\n    return this.perfilService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um perfil pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    return this.perfilService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PerfilModule.html":{"url":"modules/PerfilModule.html","title":"module - PerfilModule","body":"\n                   \n\n\n\n\n    Modules\n    PerfilModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PerfilModule\n\n\n\ncluster_PerfilModule_imports\n\n\n\ncluster_PerfilModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nPerfilModule\n\nPerfilModule\n\nPerfilModule -->\n\nPrismaModule->PerfilModule\n\n\n\n\n\nPerfilService\n\nPerfilService\n\nPerfilModule -->\n\nPerfilService->PerfilModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/perfil/perfil.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PerfilService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PerfilController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PerfilService } from './perfil.service';\nimport { PerfilController } from './perfil.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [PerfilController],\n  providers: [PerfilService]\n})\nexport class PerfilModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PerfilService.html":{"url":"injectables/PerfilService.html","title":"injectable - PerfilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PerfilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/perfil.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/perfil/perfil.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, dto: CreatePerfilDto)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdatePerfilDto)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle.error.utils';\nimport { CreatePerfilDto } from './dto/create-perfil.dto';\nimport { UpdatePerfilDto } from './dto/update-perfil.dto';\nimport { Perfil } from './entities/perfil.entity';\n\n@Injectable()\nexport class PerfilService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  delete(id: string) {\n    return this.prisma.perfil.delete({where: { id }})\n  };\n\n  update(id: string, dto: UpdatePerfilDto) {\n    return this.prisma.perfil.update({\n      where: { id },\n      data: {\n        title: dto.title,\n        imageURL: dto.imageURL,\n      }\n    })\n  };\n\n  async findAll(userId: string) {\n    return await this.prisma.perfil.findMany({\n      where: { userId: userId},\n    })\n  }\n\n  create(userId: string, dto: CreatePerfilDto) {\n    const data: Prisma.PerfilCreateInput = {\n      title: dto.title,\n      imageURL: dto.imageURL,\n      user: {\n        connect: {\n          id: userId\n        },\n      },\n      games: {\n        connect: dto.games.map((gameId) => ({\n          id: gameId,\n        })),\n      },\n    };\n\n    return this.prisma.perfil.create({\n      data, select: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        games: {\n          select: {\n            id: true,\n            nome: true,\n          },\n        },\n      },\n    }).catch(handleError);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFavoriteDto.html":{"url":"classes/UpdateFavoriteDto.html","title":"class - UpdateFavoriteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFavoriteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/favorite/dto/update-favorite.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateFavoriteDto } from './create-favorite.dto';\n\nexport class UpdateFavoriteDto extends PartialType(CreateFavoriteDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGameDto.html":{"url":"classes/UpdateGameDto.html","title":"class - UpdateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/update.game.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateGameDto } from './create.game.dto';\n\nexport class UpdateGameDto extends PartialType(CreateGameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGeneroDto.html":{"url":"classes/UpdateGeneroDto.html","title":"class - UpdateGeneroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGeneroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/generos/dto/update.genero.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateGeneroDto } from './create.genero.dto';\n\nexport class UpdateGeneroDto extends PartialType(CreateGeneroDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePerfilDto.html":{"url":"classes/UpdatePerfilDto.html","title":"class - UpdatePerfilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePerfilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/dto/update-perfil.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePerfilDto } from './create-perfil.dto';\n\nexport class UpdatePerfilDto extends PartialType(CreatePerfilDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  cpf: string;\n  isAdmin?: boolean;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Cadastrar um novo usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um usuário por ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um usuário pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário por ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('User')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Cadastrar um novo usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um usuário pelo ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findById(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário por ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um usuário por ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    return this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    cpf: false,\n    name: true,\n    password: false,\n    email: false,\n    isAdmin: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handle.error.utils';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    cpf: false,\n    name: true,\n    password: false,\n    email: false,\n    isAdmin: false,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user\n      .update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  delete(id: string) {\n    return this.prisma.user.delete({where: { id }})\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/loggedUser.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/favorite/dto/create-favorite.dto.ts\n            \n            class\n            CreateFavoriteDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/favorite/dto/update-favorite.dto.ts\n            \n            class\n            UpdateFavoriteDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/favorite/entities/favorite.entity.ts\n            \n            class\n            Favorite\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/favorite/favorite.controller.ts\n            \n            controller\n            FavoriteController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/favorite/favorite.service.ts\n            \n            injectable\n            FavoriteService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/dto/create.game.dto.ts\n            \n            class\n            CreateGameDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/game/dto/update.game.dto.ts\n            \n            class\n            UpdateGameDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/generos/dto/create.genero.dto.ts\n            \n            class\n            CreateGeneroDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/generos/dto/update.genero.dto.ts\n            \n            class\n            UpdateGeneroDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/generos/entities/genero.entity.ts\n            \n            class\n            Genero\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/generos/generos.controller.ts\n            \n            controller\n            GenerosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/generos/generos.service.ts\n            \n            injectable\n            GenerosService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/homepage/homepage.controller.ts\n            \n            controller\n            HomepageController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/homepage/homepage.service.ts\n            \n            injectable\n            HomepageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/perfil/dto/create-perfil.dto.ts\n            \n            class\n            CreatePerfilDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/perfil/dto/update-perfil.dto.ts\n            \n            class\n            UpdatePerfilDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/perfil/entities/perfil.entity.ts\n            \n            class\n            Perfil\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/perfil/perfil.controller.ts\n            \n            controller\n            PerfilController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/perfil/perfil.service.ts\n            \n            injectable\n            PerfilService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/handle.error.utils.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.14.0\n        \n            @types/axios : ^0.14.0\n        \n            axios : ^0.27.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle.error.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle.error.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FavoriteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GenerosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomepageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PerfilModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FavoriteModule\n\n\n\ncluster_FavoriteModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GenerosModule\n\n\n\ncluster_GenerosModule_providers\n\n\n\ncluster_HomepageModule\n\n\n\ncluster_HomepageModule_providers\n\n\n\ncluster_PerfilModule\n\n\n\ncluster_PerfilModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFavoriteModule\n\nFavoriteModule\n\nAppModule -->\n\nFavoriteModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGenerosModule\n\nGenerosModule\n\nAppModule -->\n\nGenerosModule->AppModule\n\n\n\n\n\nHomepageModule\n\nHomepageModule\n\nAppModule -->\n\nHomepageModule->AppModule\n\n\n\n\n\nPerfilModule\n\nPerfilModule\n\nAppModule -->\n\nPerfilModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nFavoriteModule -->\n\nPrismaModule->FavoriteModule\n\n\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\nGenerosModule -->\n\nPrismaModule->GenerosModule\n\n\n\nHomepageModule -->\n\nPrismaModule->HomepageModule\n\n\n\nPerfilModule -->\n\nPrismaModule->PerfilModule\n\n\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFavoriteService\n\nFavoriteService\n\nFavoriteModule -->\n\nFavoriteService->FavoriteModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGenerosService\n\nGenerosService\n\nGenerosModule -->\n\nGenerosService->GenerosModule\n\n\n\n\n\nHomepageService\n\nHomepageService\n\nHomepageModule -->\n\nHomepageService->HomepageModule\n\n\n\n\n\nPerfilService\n\nPerfilService\n\nPerfilModule -->\n\nPerfilService->PerfilModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../loggedUser.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/loggedUser.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
